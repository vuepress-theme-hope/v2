import{_ as i,W as l,X as u,Y as a,$ as s,a0 as n,Z as e,a1 as p,E as o}from"./framework-eb069dea.js";const r={},d=s("p",null,[n("使用 "),s("code",null,"vuepress-plugin-blog2"),n("，你可以轻松地将博客功能引入主题。")],-1),k=s("h2",{id:"插件的工作逻辑",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#插件的工作逻辑","aria-hidden":"true"},"#"),n(" 插件的工作逻辑")],-1),v=p(`<p>上方的流程图可以帮助你了解插件的工作原理及其设计目标。</p><h2 id="收集文章并生成信息" tabindex="-1"><a class="header-anchor" href="#收集文章并生成信息" aria-hidden="true">#</a> 收集文章并生成信息</h2><p>起步时，插件会首选过滤并选择那些需要作为文章的页面。这将剔除你不想要的页面，并在后续处理中排除它们。</p><div class="hint-container note"><p class="hint-container-title">注</p><p>默认情况下，所有从 Markdown 文件生成但不是主页的页面，都将被包含作为文章。</p></div><p>你可能需要设置 <code>filter</code> 选项来完全自定义要收集的页面。 <code>filter</code> 接受一个形状为 <code>(page: Page) =&gt; boolean</code> 的函数。</p><p>接着，你应该设置 <code>getInfo</code> 选项为一个接受 <code>Page</code> 作为参数并返回包含所需信息的对象的函数。这样稍后，你可以从组合 API 中获取这些信息。</p><details class="hint-container details"><summary>案例</summary><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 主题入口</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> blogPlugin <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vuepress-plugin-blog2&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&quot;vuepress-theme-xxx&quot;</span><span class="token punctuation">,</span>
  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token function">blogPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token function-variable function">filter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> filePathRelative<span class="token punctuation">,</span> frontmatter <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// 舍弃那些不是从 Markdown 文件生成的页面</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>filePathRelative<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

        <span class="token comment">// 舍弃 \`archives\` 文件夹的页面</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>filePathRelative<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&quot;archives/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

        <span class="token comment">// 舍弃那些没有使用默认布局的页面</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>frontmatter<span class="token punctuation">.</span>home <span class="token operator">||</span> frontmatter<span class="token punctuation">.</span>layout<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>

      <span class="token function-variable function">getInfo</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> frontmatter<span class="token punctuation">,</span> git <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// 获取页面信息</span>
        <span class="token keyword">const</span> info<span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
          author<span class="token operator">:</span> frontmatter<span class="token punctuation">.</span>author <span class="token operator">||</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
          categories<span class="token operator">:</span> frontmatter<span class="token punctuation">.</span>categories <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
          date<span class="token operator">:</span> frontmatter<span class="token punctuation">.</span>date <span class="token operator">||</span> git<span class="token punctuation">.</span>createdTime <span class="token operator">||</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
          tags<span class="token operator">:</span> frontmatter<span class="token punctuation">.</span>tags <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
          excerpt<span class="token operator">:</span> data<span class="token punctuation">.</span>excerpt <span class="token operator">||</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> info<span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token comment">// 其他插件 ...</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="自定义类别和类型" tabindex="-1"><a class="header-anchor" href="#自定义类别和类型" aria-hidden="true">#</a> 自定义类别和类型</h2><p>基本上，你的博客中需要两种类型的收藏:</p><ul><li><p>类别:</p><p>“类别”是用文章的标签 (或类别) 对它们进行分组。</p><p>例如，每篇文章可能都有对应的“分类”和“标签”。</p></li><li><p>类型:</p><p>“类型”是过滤不同条件的文章。</p><p>例如，你的帖子中可能有日记或笔记。当帖子带有写作日期信息时，它可以称为“时间线项目”。</p></li></ul><p>了解这两种类型的描述后，你可以设置 <code>category</code> 和 <code>type</code> 选项，它们都接受一个数组，每个元素代表一个配置。</p><p>让我们从此处 2 个例子开始。</p><p>假设你想为每篇文章设置标签，并且你正在通过 <code>frontmatter.tag</code> 设置它们。同时，你想要在 <code>/tag/</code> 中使用 <code>TagMap</code> 布局的标签页面，并在<code>/tag/标签名称</code> 中使用 <code>TagList</code> 布局对标签按名称进行分组，你可能需要这样的配置:</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 主题入口</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> blogPlugin <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vuepress-plugin-blog2&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&quot;vuepress-theme-xxx&quot;</span><span class="token punctuation">,</span>
  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token function">blogPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token comment">// 其他配置 ...</span>
      category<span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
          key<span class="token operator">:</span> <span class="token string">&quot;tag&quot;</span><span class="token punctuation">,</span>
          <span class="token function-variable function">getter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> frontmatter <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> frontmatter<span class="token punctuation">.</span>tag <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
          path<span class="token operator">:</span> <span class="token string">&quot;/tag/&quot;</span><span class="token punctuation">,</span>
          layout<span class="token operator">:</span> <span class="token string">&quot;TagMap&quot;</span><span class="token punctuation">,</span>
          <span class="token function-variable function">frontmatter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">&quot;标签页&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
          itemPath<span class="token operator">:</span> <span class="token string">&quot;/tag/:name/&quot;</span><span class="token punctuation">,</span>
          itemLayout<span class="token operator">:</span> <span class="token string">&quot;TagList&quot;</span><span class="token punctuation">,</span>
          <span class="token function-variable function">itemFrontmatter</span><span class="token operator">:</span> <span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">标签</span><span class="token template-punctuation string">\`</span></span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token comment">// 其他插件 ...</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此外，你可能希望为你的一些文章加注星标，并将其展示给访问者。当你在 frontmatter 中设置 <code>star: true</code> 来标记它们时，你可能需要这样的配置来在 <code>/star/</code> 路径中以 <code>StarList</code> 布局显示它们:</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 主题入口</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> blogPlugin <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vuepress-plugin-blog2&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&quot;vuepress-theme-xxx&quot;</span><span class="token punctuation">,</span>
  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token function">blogPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token comment">// 其他配置 ...</span>
      type<span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
          key<span class="token operator">:</span> <span class="token string">&quot;star&quot;</span><span class="token punctuation">,</span>
          <span class="token function-variable function">filter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> frontmatter <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> frontmatter<span class="token punctuation">.</span>star<span class="token punctuation">,</span>
          path<span class="token operator">:</span> <span class="token string">&quot;/star/&quot;</span><span class="token punctuation">,</span>
          layout<span class="token operator">:</span> <span class="token string">&quot;StarList&quot;</span><span class="token punctuation">,</span>
          <span class="token function-variable function">frontmatter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">&quot;收藏页&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token comment">// 其他插件 ...</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,16),m=p(`<h2 id="在客户端使用组合-api" tabindex="-1"><a class="header-anchor" href="#在客户端使用组合-api" aria-hidden="true">#</a> 在客户端使用组合 API</h2><p>当生成每个页面时，插件将在 <code>frontmatter.blog</code> 中设置如下信息</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">BlogFrontmatterOptions</span> <span class="token punctuation">{</span>
  <span class="token doc-comment comment">/** 当前页面的类型 */</span>
  type<span class="token operator">:</span> <span class="token string">&quot;category&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;type&quot;</span><span class="token punctuation">;</span>
  <span class="token doc-comment comment">/** 在当前分类或类别下全局唯一的 key */</span>
  key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token doc-comment comment">/**
   * 当前的分类名称
   *
   * <span class="token keyword">@description</span> 仅在分类子项目页面中可用
   */</span>
  name<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>所以你可以直接调用 <code>useBlogCategory()</code> 和 <code>useBlogType()</code>，结果将是当前路由绑定的类别或类型。</p><p>此外，你可以通过传递所需的 <code>key</code> 作为参数，来将获得绑定到该 <code>key</code> 的信息。</p>`,5),b=p(`<h2 id="多语言支持" tabindex="-1"><a class="header-anchor" href="#多语言支持" aria-hidden="true">#</a> 多语言支持</h2><p>该插件添加了原生多语言支持，因此你的设置将自动应用于每种语言。</p><p>例如，如果用户进行了以下 locales 配置，并且你正在设置上面的“star”示例:</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// .vuepress/config.ts</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  locales<span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;/&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      lang<span class="token operator">:</span> <span class="token string">&quot;en-US&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;/zh/&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      lang<span class="token operator">:</span> <span class="token string">&quot;zh-CN&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>那么 <code>/zh/star/</code> 和 <code>/star/</code> 都将可用，并且只会显示对应语言下的文章。</p><h2 id="摘要生成" tabindex="-1"><a class="header-anchor" href="#摘要生成" aria-hidden="true">#</a> 摘要生成</h2><p>这个插件提供了一个内置的摘要生成器，可以通过将 <code>excerpt</code> 选项设置为 <code>true</code> 来启用。</p><div class="hint-container info"><p class="hint-container-title">摘要介绍</p><p>摘要是一个 HTML 片段，被用于在博客列表中显示文章的简短描述，所以摘要有如下限制:</p><ul><li>摘要不支持 Vue 组件以及其他 Vue 语法，所以此类内容会在生成时被移除。如果你有自定义组件 (非 Vue 组件)，请配置 <code>isCustomElement</code> 选项。</li><li>由于摘要是一个 HTML 片段，所以你将无法通过相对路径或别名引入任何图片，这些图片会被直接移除。如果你想要保留图片，请使用基于 <code>.vuepress/public</code> 的绝对路径或完整路径以确保它们可以在其他地址被访问。</li></ul></div><p>摘要生成器将尝试从 Frontmatter 内容中找到有效的摘要分隔符，如果找到，它将使用分隔符之前的内容，分隔符默认为 <code>&lt;!-- more --&gt;</code>，并且你可以通过 <code>excerptSeparator</code> 选项来自定义它。</p><p>如果找不到有效的分隔符，它将从 Markdown 文件的开头开始解析内容，直到长度达到预设值时停止。该值默认为 <code>300</code>，你可以通过设置 <code>excerptLength</code> 选项来自定义它。</p><p>要选择哪个页面应该生成摘要，你可以使用 <code>excerptFilter</code> 选项。</p><div class="hint-container tip"><p class="hint-container-title">示例</p><p>通常，如果用户设置了 <code>frontmatter.description</code>，你可能希望使用它们，因此如果 <code>frontmatter.description</code> 不为空，你可以让过滤器函数返回 <code>false</code>。</p></div>`,12);function g(f,h){const c=o("Mermaid"),t=o("RouterLink");return l(),u("div",null,[d,k,a(c,{id:"mermaid-6",code:"eJyNVU1P20AQvfMrVr70Ui5tz5UKUiWktuLAzeHgkk2w6tiRcYpyAwEhqM2HUApt6EeCWoEaNQmCQkIU8l8qrx3/i856bGedQttLZGdn3r6ZefOc0oz1lVXFtMjS3Awha7mXaVPJrpLcGjWJ7NZOneKVfXOyDGeErBh6Sk3L3k7JHba9jT2v2ecHVE/OiLm6kaREfsF/o9SkatIVSzV0vIcQkyrJecQbdwascmAPG259G7GXZ2cf+1Ec6oHsbdTHo12SUjULWOHFCd1ttlm77hzsuq2G1/zpfTqOpT0M09LUWtBTRpTnVKpwHebZo6az2YnlPZJZt4AxwAcDIOn8lO18I6aRs+hzainE7v3AyiaF+K9pqlNTseiikqay5Na+OMUqsotAUqahWxnF4sXYvTLrbbGzDQnR1k3Voks0k5UloIG3s8IHSLN7F87hJdC2B5cQ7EdHLV+BG9OGmScyKxbcswGC3dJ2QjTDyM4H4bK3WWLlgtOp2L3vmBkMgMyGPeElWVGC5DT6TqnN/xNnMS5f8Z76OFgt9I51+uy6hrASRwwBM8qEgcQG127rTUK/h4GsWnJPuuRXYZ9gPsLdg+69b7DuthQNC8o3zD+Z8T8jXgAhFscF5sONR0fj5lunvM+uK0Hn450R2Arl41BRrwk9q1ir9xO6puRBFfAgzBXeYI6ZRYzgj8/CKP7ydBKZ0JFrwCLYJVFWfBIitUBmMVKcbkx6KA+hP35EpK4p+Vj5LGws736x9Q/pLEFoTDaYdbtsePB/92yqE5PrhFmgBfgcwnlPuQJsvDP4ilOe1kosL6YTVEKYdfck/EFwmHAIYYV3DyCsQGi+AD/ZYE2lugX72z4Gy3Vbnb/4pu8PgWsKruCvGFiBpsWkEmZEpxF/MRRG1N0Cv+fOP6cZ6Ug3TxYXhOWFkqPqQqzpVL9iP+22rOBZltCexQLAU2FDySuaJ+h8zt4NK3bDsYgkuKPLkj0cwb3BSl912M22PSjHTRqdCUMQVAAyqZUzdZDEuwu3GrpttTwe1djR50AHr9U11YIS2yPvsM1KdRiQaEyTIlHTEDkcgl27Rz1ufr63gw/1L9nH0ynnD7jxyJ3zkNvke4pfW0CPfWEiFQUHgaBE6cGJT3rmNy6TfHY="}),v,s("p",null,[n("看，设置这两种类型很容易。有关完整选项，请参阅 "),a(t,{to:"/zh/config.html#%E5%8D%9A%E5%AE%A2%E5%88%86%E7%B1%BB%E9%85%8D%E7%BD%AE"},{default:e(()=>[n("博客分类配置")]),_:1}),n(" 和 "),a(t,{to:"/zh/config.html#%E5%8D%9A%E5%AE%A2%E7%B1%BB%E5%9E%8B%E9%85%8D%E7%BD%AE"},{default:e(()=>[n("博客分类配置")]),_:1}),n("。")]),m,s("p",null,[n("有关返回类型，请参阅 "),a(t,{to:"/zh/config.html#%E5%8F%AF%E7%BB%84%E5%90%88%E5%BC%8F-API"},{default:e(()=>[n("Composition API 返回类型")]),_:1}),n("。")]),b])}const q=i(r,[["render",g],["__file","guide.html.vue"]]);export{q as default};
