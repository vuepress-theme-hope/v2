import{aj as p,ak as o,ao as e,an as r,am as l,ap as i,aq as a,as as n,ar as h,al as d}from"./app-3Fu3LGel.js";const k="/v2/assets/vscode-hint-light-BrqOK8nK.png",g="/v2/assets/vscode-hint-dark-DsUhnUqB.png",c="/v2/assets/vscode-error-light-G5N0mIbk.png",m="/v2/assets/vscode-error-dark-DxhgXwfA.png",u="/v2/assets/vscode-autocomplete-light-CXbOAAnY.png",y="/v2/assets/vscode-autocomplete-dark-Mk8pqpb5.png",A={},f={class:"hint-container info"},v={class:"hint-container info"},F={class:"hint-container info"};function B(b,s){const t=h("RouteLink");return d(),o("div",null,[s[20]||(s[20]=e("p",null,"本教程指引你如何配置 VuePress 项目。",-1)),r(" more "),s[21]||(s[21]=l(`<h2 id="配置-vuepress" tabindex="-1"><a class="header-anchor" href="#配置-vuepress"><span>配置 VuePress</span></a></h2><p>VuePress 使用文档文件夹中的 <code>.vuepress</code> 文件夹存放配置，所有 VuePress 相关的文件都将会被放在这里。</p><p>对于 VuePress 站点来说，<code>.vuepress/config.ts</code> (或 <code>.vuepress/config.js</code>) 是必要的配置文件。</p><div class="hint-container tip"><p class="hint-container-title">使用 TS 配置文件</p><p>我们建议你使用 TypeScript 配置文件，以得到更好的类型提示、自动补全与错误检查。</p><p>如果你不熟悉 TypeScript，使用 JavaScript 配置文件也是可以的，但你最好使用诸如 VSCode 这种全面支持 TS/JS 语法的编辑器，以避免丢失下方提及的类型检查、自动补全与选项提示等功能。</p></div><h2 id="配置文件" tabindex="-1"><a class="header-anchor" href="#配置文件"><span>配置文件</span></a></h2><p>你需要在配置文件<code>.vuepress/config.ts</code> (或 <code>.vuepress/config.js</code>) 中，设置一个配置对象并将其导出。</p><p>为了能够得到正确的提示，我们建议从 <code>vuepress</code> 导入 <code>defineUserConfig</code> 并包裹配置对象:</p><p>@tab JS</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title=".vuepress/config.js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">defineUserConfig</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;vuepress&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;"> default</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> defineUserConfig</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 此处放置配置</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">});</span></span></code></pre></div><p>在模板中，为了避免配置文件过长，我们使用 JavaScript 原生提供的 ESM 特性，将主题配置、导航栏和侧边栏配置拆分到了单独的文件夹中。</p><p>模板将主题函数抽离到了 <code>.vuepress/theme.ts</code>，并通过 <code>export default</code> 导出。</p><p><code>.vuepress/theme.ts</code>:</p><div class="language-ts" data-highlighter="shiki" data-ext="ts" data-title="ts" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">hopeTheme</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;vuepress-theme-hope&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 我们默认导出了主题对象</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;"> default</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> hopeTheme</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 主题配置</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">});</span></span></code></pre></div><p>随后在配置文件中直接引入:</p><p><code>.vuepress/config.ts</code>:</p><div class="language-ts" data-highlighter="shiki" data-ext="ts" data-title="ts" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// ...</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 我们在这里引入了主题</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> theme</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;./theme.js&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// ...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;"> default</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> defineUserConfig</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // ...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 这和 \`theme: hopeTheme({/* 主题配置 */})\` 是等价的</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  theme</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // ...</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">});</span></span></code></pre></div><p>这也能更清晰的帮助你理解配置中的站点配置和主题配置。</p><h2 id="配置作用域" tabindex="-1"><a class="header-anchor" href="#配置作用域"><span>配置作用域</span></a></h2><h3 id="站点配置" tabindex="-1"><a class="header-anchor" href="#站点配置"><span>站点配置</span></a></h3><p>站点配置中的配置项被 VuePress 直接读取，和主题无关且在所有主题均可生效。</p><p>我们知道，每一个站点都应该有它的 <code>lang</code>, <code>title</code> 和 <code>description</code> 等属性，因此 VuePress 内置支持了这些属性的配置。</p><div class="hint-container info"><p class="hint-container-title">站点配置</p><p>你可以前往 <a href="https://vuejs.press/zh/reference/config.html" target="_blank" rel="noopener noreferrer">VuePress2 → 参考 → 配置</a> 查看所有 VuePress 配置。</p></div><h3 id="主题配置" tabindex="-1"><a class="header-anchor" href="#主题配置"><span>主题配置</span></a></h3><p>主题配置是你传递给 <code>hopeTheme</code> 函数的对象，它将由 VuePress Theme Hope 处理。</p>`,24)),e("p",null,[s[1]||(s[1]=i("你可以在 ")),a(t,{to:"/zh/config/"},{default:n(()=>s[0]||(s[0]=[i("配置 → 主题配置")])),_:1}),s[2]||(s[2]=i(" 中找到全部的主题配置。"))]),s[22]||(s[22]=l('<div class="hint-container tip"><p class="hint-container-title">提示与检查</p><p>如果你在使用支持 TS/JS 语言特性的编辑器 (如 VSCode)，你可以很方便的得到选项提示与检查。</p><ul><li><p>你可以将鼠标悬停在某个选项以获得提示:</p><p><img src="'+k+'" alt="选项提示" data-mode="lightmode-only" loading="lazy"><br><img src="'+g+'" alt="选项提示" data-mode="darkmode-only" loading="lazy"></p></li><li><p>如果你输入了错误的选项名称或非法的值，你会得到错误提示:</p><p><img src="'+c+'" alt="错误提示" data-mode="lightmode-only" loading="lazy"><br><img src="'+m+'" alt="错误提示" data-mode="darkmode-only" loading="lazy"></p></li><li><p>你可以在输入时得到自动补全:</p><p><img src="'+u+'" alt="自动补全" data-mode="lightmode-only" loading="lazy"><br><img src="'+y+'" alt="自动补全" data-mode="darkmode-only" loading="lazy"></p></li></ul></div><h3 id="更多" tabindex="-1"><a class="header-anchor" href="#更多"><span>更多</span></a></h3>',2)),e("div",f,[s[11]||(s[11]=e("p",{class:"hint-container-title"},"插件配置",-1)),e("p",null,[s[4]||(s[4]=i("VuePress Theme Hope 主题捆绑了一些插件，你可以在主题选项中通过 ")),s[5]||(s[5]=e("code",null,"plugins.插件名称",-1)),s[6]||(s[6]=i(" 来传递插件选项，详见 ")),a(t,{to:"/zh/config/plugins/"},{default:n(()=>s[3]||(s[3]=[i("配置 → 主题插件配置")])),_:1}),s[7]||(s[7]=i("。"))]),e("p",null,[s[9]||(s[9]=i("如果你想要额外使用插件，请自行调用插件并传递插件选项，详见 ")),a(t,{to:"/cookbook/vuepress/plugin.html"},{default:n(()=>s[8]||(s[8]=[i("VuePress → 插件")])),_:1}),s[10]||(s[10]=i("。"))])]),e("div",v,[s[15]||(s[15]=l('<p class="hint-container-title">样式配置</p><p>VuePress Theme Hope 主题使用 <code>.vuepress/styles</code> 文件夹存放样式配置。你可以在此文件夹中:</p><ul><li>创建 <code>index.scss</code> 来注入额外的 CSS 样式</li><li>创建 <code>config.scss</code> 来进行样式配置</li><li>创建 <code>palette.scss</code> 来配置颜色与布局</li></ul>',3)),e("p",null,[s[13]||(s[13]=i("更多详情，详见 ")),a(t,{to:"/zh/config/style.html"},{default:n(()=>s[12]||(s[12]=[i("配置 → 样式配置")])),_:1}),s[14]||(s[14]=i("。"))])]),e("div",F,[s[19]||(s[19]=e("p",{class:"hint-container-title"},"页面配置",-1)),e("p",null,[s[17]||(s[17]=i("VuePress 支持在页面范围内通过 Markdown 文件中的 YAML Frontmatter 进行特定页面的配置，详见之前章节中的 ")),a(t,{to:"/zh/get-started/content.html#frontmatter"},{default:n(()=>s[16]||(s[16]=[i("项目内容 → Frontmatter")])),_:1}),s[18]||(s[18]=i("。"))])])])}const D=p(A,[["render",B],["__file","config.html.vue"]]),x=JSON.parse('{"path":"/zh/get-started/config.html","title":"配置项目","lang":"zh-CN","frontmatter":{"title":"配置项目","icon":"gears","order":5,"category":["快速上手","基础知识","教程"],"tag":["配置项目"],"description":"本教程指引你如何配置 VuePress 项目。","head":[["link",{"rel":"canonical","href":"https://theme-hope.vuejs.press/zh/get-started/config.html"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://vuepress-theme-hope.github.io/v2/get-started/config.html"}],["meta",{"property":"og:url","content":"https://vuepress-theme-hope.github.io/v2/zh/get-started/config.html"}],["meta",{"property":"og:site_name","content":"vuepress-theme-hope"}],["meta",{"property":"og:title","content":"配置项目"}],["meta",{"property":"og:description","content":"本教程指引你如何配置 VuePress 项目。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-09-23T11:46:45.000Z"}],["meta",{"property":"article:tag","content":"配置项目"}],["meta",{"property":"article:modified_time","content":"2024-09-23T11:46:45.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"配置项目\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-09-23T11:46:45.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hope\\",\\"url\\":\\"https://mister-hope.com\\"}]}"],["link",{"rel":"alternate","type":"application/atom+xml","href":"https://vuepress-theme-hope.github.io/v2/zh/atom.xml","title":"vuepress-theme-hope Atom Feed"}],["link",{"rel":"alternate","type":"application/json","href":"https://vuepress-theme-hope.github.io/v2/zh/feed.json","title":"vuepress-theme-hope JSON Feed"}],["link",{"rel":"alternate","type":"application/rss+xml","href":"https://vuepress-theme-hope.github.io/v2/zh/rss.xml","title":"vuepress-theme-hope RSS Feed"}]]},"headers":[{"level":2,"title":"配置 VuePress","slug":"配置-vuepress","link":"#配置-vuepress","children":[]},{"level":2,"title":"配置文件","slug":"配置文件","link":"#配置文件","children":[]},{"level":2,"title":"配置作用域","slug":"配置作用域","link":"#配置作用域","children":[{"level":3,"title":"站点配置","slug":"站点配置","link":"#站点配置","children":[]},{"level":3,"title":"主题配置","slug":"主题配置","link":"#主题配置","children":[]},{"level":3,"title":"更多","slug":"更多","link":"#更多","children":[]}]}],"git":{"createdTime":1648799705000,"updatedTime":1727092005000,"contributors":[{"name":"Mr.Hope","email":"mister-hope@outlook.com","commits":5}]},"readingTime":{"minutes":3.19,"words":957},"filePathRelative":"zh/get-started/config.md","localizedDate":"2022年4月1日","excerpt":"<p>本教程指引你如何配置 VuePress 项目。</p>\\n","autoDesc":true}');export{D as comp,x as data};
