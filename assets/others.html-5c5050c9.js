import{a3 as e,Z as a,_ as d,a5 as c}from"./framework-f408d5b9.js";const n={},o=c(`<h2 id="проверка-ссылки" tabindex="-1"><a class="header-anchor" href="#проверка-ссылки" aria-hidden="true">#</a> Проверка ссылки</h2><p>По умолчанию тема проверит ваши уценочные ссылки в режиме разработки.</p><p>Вы можете настроить эту функцию с помощью <code>plugins.mdEnhance.linkCheck</code> в настройках темы, и вы можете выбрать <code>&#39;always&#39;</code>, <code>&#39;never&#39;</code>, <code>&#39;dev&#39;</code> и <code>&#39;build&#39;</code>.</p><h2 id="gfm" tabindex="-1"><a class="header-anchor" href="#gfm" aria-hidden="true">#</a> GFM</h2><p>Если ваши документы размещены как на сайте документации, так и непосредственно на GitHub, мы предоставляем <code>plugins.mdEnhance.gfm</code> в параметрах темы, чтобы согласовать ваше поведение Markdown с GitHub.</p><div class="hint-container note"><p class="hint-container-title">Заметка</p><p>Пользовательский контейнер включен по умолчанию в <code>@vuepress/theme-default</code> и <code>vuepress-theme-hope</code>, но недоступен в предварительной версии GitHub Markdown.</p></div><h2 id="v-pre" tabindex="-1"><a class="header-anchor" href="#v-pre" aria-hidden="true">#</a> v-pre</h2><p>Поскольку VuePress2 удалил контейнер V1 v-pre из ядра, плагин предоставляет возможность его поддержки. То есть вы можете использовать любой синтаксис Mustache в контейнере ниже.</p><div class="language-markdown" data-ext="md"><pre class="language-markdown"><code>::: v-pre

{{ abc }}

:::
</code></pre></div>`,9),r=[o];function t(s,i){return a(),d("div",null,r)}const p=e(n,[["render",t],["__file","others.html.vue"]]);export{p as default};
