import{a3 as l,Z as e,_ as o,a4 as a,a1 as i,a2 as t,a5 as c}from"./framework-f408d5b9.js";const d={},r=i("p",null,[i("code",null,"vuepress-theme-hope"),t(" 允许你全局为代码块在日间模式和夜间模式下配置不同主题。")],-1),n=c('<div class="hint-container tip"><p class="hint-container-title">提示</p><p>处于对输出样式大小的考量，我们不会全局引入所有样式。所以我们不支持在代码块单独配置主题。</p></div><h2 id="设置方式" tabindex="-1"><a class="header-anchor" href="#设置方式" aria-hidden="true">#</a> 设置方式</h2><p>请在 <code>.vuepress/styles/config.scss</code> 中设置以下变量来控制代码块主题。</p><ul><li><code>$code-light-theme</code>: 浅色模式下代码主题，默认为 <code>&quot;one-light&quot;</code></li><li><code>$code-dark-theme</code>: 深色模式下代码主题，默认为 <code>&quot;one-dark&quot;</code></li></ul><h2 id="可用的主题" tabindex="-1"><a class="header-anchor" href="#可用的主题" aria-hidden="true">#</a> 可用的主题</h2><div class="hint-container info"><p class="hint-container-title">浅色主题</p><ul><li>ateliersulphurpool-light</li><li>coldark-cold</li><li>coy</li><li>duotone-light</li><li>ghcolors</li><li>gruvbox-light</li><li>material-light</li><li>one-light</li><li>vs</li></ul></div><div class="hint-container info"><p class="hint-container-title">深色主题</p><ul><li>atom-dark</li><li>cb</li><li>coldark-dark</li><li>dark</li><li>dracula</li><li>duotone-dark</li><li>duotone-earth</li><li>duotone-forest</li><li>duotone-sea</li><li>duotone-space</li><li>gruvbox-dark</li><li>holi</li><li>hopscotch</li><li>lucario</li><li>material-dark</li><li>material-oceanic</li><li>night-owl</li><li>nord</li><li>one-dark</li><li>pojoaque</li><li>shades-of-purple</li><li>solarized-dark-atom</li><li>tomorrow</li><li>vsc-dark-plus</li><li>xonokai</li><li>z-touch</li></ul></div>',7);function s(h,u){return e(),o("div",null,[r,a(" more "),n])}const m=l(d,[["render",s],["__file","code-theme.html.vue"]]);export{m as default};
