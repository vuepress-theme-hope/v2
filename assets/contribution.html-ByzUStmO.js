import{aj as n,ak as s,ao as i,an as a,am as t,al as o}from"./app-3Fu3LGel.js";const l={};function p(c,e){return o(),s("div",null,[e[0]||(e[0]=i("p",null,"We always welcome everyone to contribute! Here is a guide for you.",-1)),a(" more "),e[1]||(e[1]=t(`<h2 id="clone-and-install-project" tabindex="-1"><a class="header-anchor" href="#clone-and-install-project"><span>Clone and Install Project</span></a></h2><p>You should have Node.js and Git installed, and enabled corepack with <code>corepack enable</code>.</p><p>Use Git to clone the project to the local, and install dependencies:</p><div class="language-sh" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> clone</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> git@github.com:vuepress-theme-hope/vuepress-theme-hope.git</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pnpm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> i</span></span></code></pre></div><h2 id="project-file-structure" tabindex="-1"><a class="header-anchor" href="#project-file-structure"><span>Project File Structure</span></a></h2><p>The project is a monorepo, managed by pnpm.</p><ul><li><code>docs</code>: place the documentation of each plugin and theme, each subdirectory is a project</li><li><code>demo</code>: theme demo project</li><li><code>packages</code>: place the code of each plugin and theme, each subdirectory is a project</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>.</span></span>
<span class="line"><span>├── .github → GitHub config</span></span>
<span class="line"><span>├── .husky → husky config</span></span>
<span class="line"><span>│</span></span>
<span class="line"><span>├── demo → Demo projects</span></span>
<span class="line"><span>│</span></span>
<span class="line"><span>├── docs → document directory</span></span>
<span class="line"><span>│ ├── components → components plugin document</span></span>
<span class="line"><span>│ ├── lightgallery → lightgallery plugin document</span></span>
<span class="line"><span>│ ├── md-enhance → md-enhance plugin document</span></span>
<span class="line"><span>│ ├── search-pro → search-pro plugin document</span></span>
<span class="line"><span>│ └── theme → theme document</span></span>
<span class="line"><span>│</span></span>
<span class="line"><span>├── packages → project source code</span></span>
<span class="line"><span>│ ├── components → components plugin</span></span>
<span class="line"><span>│ ├── create → create-vuepress-theme-hope helper</span></span>
<span class="line"><span>│ ├── lightgallery → lightgallery plugin</span></span>
<span class="line"><span>│ ├── md-enhance → md-enhance plugin</span></span>
<span class="line"><span>│ ├── search-pro → search-pro plugin</span></span>
<span class="line"><span>│ ├── shared → shared file</span></span>
<span class="line"><span>│ └── theme → vuepress-theme-hope theme</span></span>
<span class="line"><span>│</span></span>
<span class="line"><span>├── scripts → command scripts</span></span>
<span class="line"><span>│</span></span>
<span class="line"><span>├── ... → some config files</span></span>
<span class="line"><span>│</span></span>
<span class="line"><span>├── LICENSE → License</span></span>
<span class="line"><span>├── package.json → root package.json</span></span>
<span class="line"><span>├── README.md → project intro</span></span>
<span class="line"><span>├── SECURITY.md → Security Policy</span></span>
<span class="line"><span>│</span></span>
<span class="line"><span>└── tsconfig.* → TypeScript config file</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="document-modification" tabindex="-1"><a class="header-anchor" href="#document-modification"><span>Document Modification</span></a></h2><p>You can find the corresponding project in the docs directory, so you can modify the corresponding Markdown directly.</p><p>After ensuring that the <code>pnpm lint</code> and <code>pnpm lint:md</code> commands emit no errors, you can commit to GitHub to open a PR.</p><div class="hint-container tip"><p class="hint-container-title">Preview Docs</p><p>Since the docs are using local themes and plugins, you need to build the local project through <code>pnpm build</code> first.</p><p>To start previewing, cd to the right project under <code>docs</code> directory, then run <code>pnpm docs:vite-dev</code> (using vite) or <code>pnpm docs:webpack-dev</code> (using webpack).</p></div><h2 id="project-modification" tabindex="-1"><a class="header-anchor" href="#project-modification"><span>Project Modification</span></a></h2><p>The structure of each project is as follows:</p><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>.</span></span>
<span class="line"><span>├── lib → compiled output file</span></span>
<span class="line"><span>│    │</span></span>
<span class="line"><span>│    ├── client → client-side compiled code</span></span>
<span class="line"><span>│    │</span></span>
<span class="line"><span>│    └── node → Node.js side compiled code</span></span>
<span class="line"><span>│</span></span>
<span class="line"><span>└── src → source file</span></span>
<span class="line"><span>     │</span></span>
<span class="line"><span>     ├── client → client-side source code</span></span>
<span class="line"><span>     │</span></span>
<span class="line"><span>     ├── node → Node.js side source code</span></span>
<span class="line"><span>     │</span></span>
<span class="line"><span>     └── shared → Shared files between node and client</span></span></code></pre></div><p>VuePress is running both in client side and node side. Node side has node module like <code>fs</code>, while client side is running in browser which has <code>document</code> <code>windows</code> <code>navigator</code> etc. globals, you should be aware of where a piece of code is running.</p><ul><li><code>client</code> directory stores code running in browser</li><li><code>node</code> directory stores code running in Node.js</li><li><code>shared</code> directory stores files that are used in both client and node, so code shall not reference any browser globals or node module.</li></ul><p>For better performance, all plugins are packed and minified using rollup when they are published.</p><h2 id="project-development" tabindex="-1"><a class="header-anchor" href="#project-development"><span>Project Development</span></a></h2><ol><li><p>Build project: <code>pnpm build</code></p><ul><li>Use rollup to bundle source files and minify them, and output results to <code>lib</code> folder</li><li>Use <code>rollup-plugin-copy</code> to copy other files to <code>lib</code> folder</li></ul></li><li><p>Develop project: <code>pnpm dev</code></p><ul><li>Use <code>tsc</code> to compile ts file to <code>lib</code> folder</li><li>Use <code>cpx</code> to copy other files to <code>lib</code> folder</li></ul></li><li><p>Format project: <code>pnpm lint</code></p><p>It will format the project using prettier, eslint and stylelint.</p><p>If you modify Markdown, you also need to run the <code>pnpm lint:md</code> command.</p></li></ol><div class="hint-container warning"><p class="hint-container-title">Warning</p><p>Please do not mix build and dev commands as they compile in completely different ways.</p><p>You may need to execute the <code>pnpm clean</code> command to clear previous command result.</p></div><h2 id="commit" tabindex="-1"><a class="header-anchor" href="#commit"><span>Commit</span></a></h2><p>The project uses <code>husky</code> to add Git Hooks for verification:</p><ul><li><p>In <code>precommit</code> stage: we use <code>lint-staged</code> to check the changed code with the corresponding Linter</p><p>This means that you need to ensure that your code is formatted by the project requirements and can pass Linter tests.</p></li><li><p>In <code>commit-msg</code> stage: we use <code>commitlint</code> to verify the commit comment.</p><p>This means that you need to ensure that your commit comments comply with Semantic</p></li></ul><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>If you cannot pass the above Git Hooks, you will not be able to complete <code>git commit</code>.</p><p>If you have already contributed something, but cannot make a commit and don&#39;t know how to fix it, you can add the <code>--no-verify</code> flag when committing to bypass Git Hooks.</p></div>`,25))])}const r=n(l,[["render",p],["__file","contribution.html.vue"]]),h=JSON.parse('{"path":"/contribution.html","title":"Contribution Guide","lang":"en-US","frontmatter":{"title":"Contribution Guide","icon":"lightbulb","category":["FAQ"],"description":"We always welcome everyone to contribute! Here is a guide for you.","head":[["link",{"rel":"canonical","href":"https://theme-hope.vuejs.press/contribution.html"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://vuepress-theme-hope.github.io/v2/zh/contribution.html"}],["meta",{"property":"og:url","content":"https://vuepress-theme-hope.github.io/v2/contribution.html"}],["meta",{"property":"og:site_name","content":"vuepress-theme-hope"}],["meta",{"property":"og:title","content":"Contribution Guide"}],["meta",{"property":"og:description","content":"We always welcome everyone to contribute! Here is a guide for you."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-07T16:33:44.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-07T16:33:44.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Contribution Guide\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-07T16:33:44.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hope\\",\\"url\\":\\"https://mister-hope.com\\"}]}"],["link",{"rel":"alternate","type":"application/atom+xml","href":"https://vuepress-theme-hope.github.io/v2/atom.xml","title":"vuepress-theme-hope Atom Feed"}],["link",{"rel":"alternate","type":"application/json","href":"https://vuepress-theme-hope.github.io/v2/feed.json","title":"vuepress-theme-hope JSON Feed"}],["link",{"rel":"alternate","type":"application/rss+xml","href":"https://vuepress-theme-hope.github.io/v2/rss.xml","title":"vuepress-theme-hope RSS Feed"}]]},"headers":[{"level":2,"title":"Clone and Install Project","slug":"clone-and-install-project","link":"#clone-and-install-project","children":[]},{"level":2,"title":"Project File Structure","slug":"project-file-structure","link":"#project-file-structure","children":[]},{"level":2,"title":"Document Modification","slug":"document-modification","link":"#document-modification","children":[]},{"level":2,"title":"Project Modification","slug":"project-modification","link":"#project-modification","children":[]},{"level":2,"title":"Project Development","slug":"project-development","link":"#project-development","children":[]},{"level":2,"title":"Commit","slug":"commit","link":"#commit","children":[]}],"git":{"createdTime":1644936187000,"updatedTime":1715099624000,"contributors":[{"name":"Nan Huang","email":"teddyhuangnan@gmail.com","commits":1},{"name":"Mr.Hope","email":"mister-hope@outlook.com","commits":42}]},"readingTime":{"minutes":2.23,"words":669},"filePathRelative":"contribution.md","localizedDate":"February 15, 2022","excerpt":"<p>We always welcome everyone to contribute! Here is a guide for you.</p>\\n","autoDesc":true}');export{r as comp,h as data};
