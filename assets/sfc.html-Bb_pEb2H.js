import{aj as t,ak as l,ao as e,an as p,am as a,ap as i,aq as o,as as h,ar as r,al as k}from"./app-3Fu3LGel.js";const d={};function c(g,s){const n=r("RouteLink");return k(),l("div",null,[s[3]||(s[3]=e("p",null,"This tutorial will explain how to every Markdown files are converted to a Vue-powered page.",-1)),p(" more "),s[4]||(s[4]=a('<h2 id="markdown-to-vue-sfc" tabindex="-1"><a class="header-anchor" href="#markdown-to-vue-sfc"><span>Markdown to Vue SFC</span></a></h2><p>Every Markdown file is first compiled to HTML and then converted to a Vue Single File Component (SFC). In other words, you can write Markdown files like Vue SFC.</p><ul><li><code>&lt;script&gt;</code> and <code>&lt;style&gt;</code> tags are directly treated as tags in Vue SFC. In other words, they are promoted from the <code>&lt;template&gt;</code> tag to the top level of the SFC.</li><li>All content other than <code>&lt;script&gt;</code> and <code>&lt;style&gt;</code> tags will be compiled to HTML and then treated as <code>&lt;template&gt;</code> tags in Vue SFC.</li></ul><p>The converted Vue SFC will be cached in the <code>.vuepress/.temp/pages</code> directory, and will be rendered by the internal <code>&lt;Content /&gt;</code> component.</p><h2 id="using-vue-syntax-in-markdown" tabindex="-1"><a class="header-anchor" href="#using-vue-syntax-in-markdown"><span>Using Vue syntax in Markdown</span></a></h2>',5)),e("p",null,[s[1]||(s[1]=i("You can use Vue syntax directly in Markdown, for details see ")),o(n,{to:"/cookbook/vuepress/markdown.html#using-vue-in-markdown"},{default:h(()=>s[0]||(s[0]=[i("VuePress → Markdown")])),_:1}),s[2]||(s[2]=i("."))]),s[5]||(s[5]=a(`<div class="hint-container important"><p class="hint-container-title">Important</p><p>Since Vue single-file components can only contain one <code>&lt;script&gt;</code> tag, you should avoid using more than one <code>&lt;script&gt;</code> tag in VuePress Markdown.</p></div><h2 id="importing-files" tabindex="-1"><a class="header-anchor" href="#importing-files"><span>Importing files</span></a></h2><div class="hint-container important"><p class="hint-container-title">Import with alias</p><p>Since Markdown will be converted to Vue single-file components in the cache directory, relative imports will not work in markdown files since they are invalid in Vue SFC. You should use alias.</p></div><ul><li><p>You can use <code>@source</code> alias to reference the source directory of the current project</p><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>.</span></span>
<span class="line"><span>├── src → project folder</span></span>
<span class="line"><span>│    ├── example</span></span>
<span class="line"><span>│    │    ├── ...</span></span>
<span class="line"><span>│    │    └── MyComponent.vue</span></span>
<span class="line"><span>│    ├── ...</span></span>
<span class="line"><span>│    └── README.md</span></span>
<span class="line"><span>└── ...</span></span></code></pre></div><div class="language-md" data-highlighter="shiki" data-ext="md" data-title="md" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">MyComponent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> setup</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> MyComponent</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;@source/example/MyComponent.vue&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div></li><li><p>You can also use <code>alias</code> option:</p><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>.</span></span>
<span class="line"><span>├── src → project folder</span></span>
<span class="line"><span>│    ├── .vuepress</span></span>
<span class="line"><span>│    │    ├── components</span></span>
<span class="line"><span>│    │    │    └── MyComponent.vue</span></span>
<span class="line"><span>│    │    ├── ...</span></span>
<span class="line"><span>│    │    └── config.ts</span></span>
<span class="line"><span>│    ├── ...</span></span>
<span class="line"><span>│    └── README.md</span></span>
<span class="line"><span>└── ...</span></span></code></pre></div><div class="language-js" data-highlighter="shiki" data-ext="js" data-title=".vuepress/config.js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">getDirname</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;vuepress/utils&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> __dirname</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> getDirname</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">meta</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;"> default</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  alias</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;@MyComponent&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">resolve</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">__dirname</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;components/MyComponent.vue&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">),</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  },</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">};</span></span></code></pre></div><div class="language-md" data-highlighter="shiki" data-ext="md" data-title="md" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">MyComponent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> setup</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> MyComponent</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;@MyComponent&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div></li></ul><div class="hint-container important"><p class="hint-container-title">Use local registration if possible</p><p>Global component needs to be loaded when VuePress is initialized (i.e., when visiting the first page). So if a global component is heavy, it will affect the initial loading time of the site.</p><p>Importing in Markdown locally means components will only be loaded when visiting the page that uses it.</p></div>`,5))])}const u=t(d,[["render",c],["__file","sfc.html.vue"]]),y=JSON.parse('{"path":"/guide/component/sfc.html","title":"Markdown to Vue SFC","lang":"en-US","frontmatter":{"title":"Markdown to Vue SFC","icon":"fab fa-vuejs","order":1,"category":["Component"],"tag":["Component","SFC"],"description":"This tutorial will explain how to every Markdown files are converted to a Vue-powered page.","head":[["link",{"rel":"canonical","href":"https://theme-hope.vuejs.press/guide/component/sfc.html"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://vuepress-theme-hope.github.io/v2/zh/guide/component/sfc.html"}],["meta",{"property":"og:url","content":"https://vuepress-theme-hope.github.io/v2/guide/component/sfc.html"}],["meta",{"property":"og:site_name","content":"vuepress-theme-hope"}],["meta",{"property":"og:title","content":"Markdown to Vue SFC"}],["meta",{"property":"og:description","content":"This tutorial will explain how to every Markdown files are converted to a Vue-powered page."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-28T18:46:36.000Z"}],["meta",{"property":"article:tag","content":"Component"}],["meta",{"property":"article:tag","content":"SFC"}],["meta",{"property":"article:modified_time","content":"2024-03-28T18:46:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Markdown to Vue SFC\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-28T18:46:36.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hope\\",\\"url\\":\\"https://mister-hope.com\\"}]}"],["link",{"rel":"alternate","type":"application/atom+xml","href":"https://vuepress-theme-hope.github.io/v2/atom.xml","title":"vuepress-theme-hope Atom Feed"}],["link",{"rel":"alternate","type":"application/json","href":"https://vuepress-theme-hope.github.io/v2/feed.json","title":"vuepress-theme-hope JSON Feed"}],["link",{"rel":"alternate","type":"application/rss+xml","href":"https://vuepress-theme-hope.github.io/v2/rss.xml","title":"vuepress-theme-hope RSS Feed"}]]},"headers":[{"level":2,"title":"Markdown to Vue SFC","slug":"markdown-to-vue-sfc","link":"#markdown-to-vue-sfc","children":[]},{"level":2,"title":"Using Vue syntax in Markdown","slug":"using-vue-syntax-in-markdown","link":"#using-vue-syntax-in-markdown","children":[]},{"level":2,"title":"Importing files","slug":"importing-files","link":"#importing-files","children":[]}],"git":{"createdTime":1702639822000,"updatedTime":1711651596000,"contributors":[{"name":"Mr.Hope","email":"mister-hope@outlook.com","commits":6}]},"readingTime":{"minutes":1.23,"words":370},"filePathRelative":"guide/component/sfc.md","localizedDate":"December 15, 2023","excerpt":"<p>This tutorial will explain how to every Markdown files are converted to a Vue-powered page.</p>\\n","autoDesc":true}');export{u as comp,y as data};
