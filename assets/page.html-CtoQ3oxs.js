import{aj as r,ak as o,am as s,ao as a,ap as t,aq as n,as as l,ar as p,al as h}from"./app-3Fu3LGel.js";const d={},c={class:"hint-container info"};function k(g,e){const i=p("RouteLink");return h(),o("div",null,[e[12]||(e[12]=s(`<h2 id="图标支持" tabindex="-1"><a class="header-anchor" href="#图标支持"><span>图标支持</span></a></h2><p>你可以在页面的 frontmatter 中配置 <code>icon</code> 字段，填入对应图标的 FontClass 即可绑定图标到页面。</p><p>该图标会在导航栏，侧边栏，路径导航和标题中使用。</p><details class="hint-container details"><summary>例子</summary><div class="language-md" data-highlighter="shiki" data-ext="md" data-title="md" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">---</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">icon</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">home</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">---</span></span></code></pre></div></details>`,4)),a("div",c,[e[2]||(e[2]=a("p",{class:"hint-container-title"},"相关信息",-1)),a("p",null,[e[1]||(e[1]=t("图标的相关设置，详见 ")),n(i,{to:"/zh/guide/interface/icon.html"},{default:l(()=>e[0]||(e[0]=[t("图标支持")])),_:1})])]),e[13]||(e[13]=s('<h2 id="路径导航" tabindex="-1"><a class="header-anchor" href="#路径导航"><span>路径导航</span></a></h2><p>主题添加了开箱即用的路径导航支持。</p><p>你可以在主题选项和页面 Frontmatter 中通过 <code>breadcrumb</code> 设置一个布尔值来控制全局和特定页面的路径导航显示。</p><p>路径导航的图标也是可配置的，你可以在主题选项和页面 Frontmatter 中通过 <code>breadcrumbIcon</code> 设置一个布尔值来控制全局和特定页面的行为。</p><p>如果你不希望某个页面被添加到路径导航中（例如：首页），你可以在页面的 Frontmatter 中设置 <code>breadcrumbExclude: true</code>。</p><h2 id="文章信息展示" tabindex="-1"><a class="header-anchor" href="#文章信息展示"><span>文章信息展示</span></a></h2>',6)),a("p",null,[e[4]||(e[4]=t("详见 ")),n(i,{to:"/zh/guide/feature/page-info.html"},{default:l(()=>e[3]||(e[3]=[t("文章信息")])),_:1}),e[5]||(e[5]=t(" 章节。"))]),e[14]||(e[14]=s('<h2 id="标题列表" tabindex="-1"><a class="header-anchor" href="#标题列表"><span>标题列表</span></a></h2><p>在桌面模式下，文章的标题列表会自动显示在屏幕的右侧。(在移动视图下它们会放置在侧边栏里)</p><p>如果你不希望在桌面模式下显示右侧的标题列表，请在主题选项中设置 <code>toc: false</code>。</p><p>你也可以在特定页面的 Frontmatter 中通过 <code>toc</code> 来指定它。</p><h3 id="设置标题深度" tabindex="-1"><a class="header-anchor" href="#设置标题深度"><span>设置标题深度</span></a></h3><p>你可以通过在主题选项和页面 Frontmatter 中设置 <code>headerDepth</code> 来自定义标题列表的深度。</p><div class="hint-container note"><p class="hint-container-title">注</p><p>标题深度的有效最大值取决于你通过 <a href="https://vuejs.press/zh/reference/config.html#markdown.headers" target="_blank" rel="noopener noreferrer">markdown.headers.level</a> 提取了哪些级别的标题。</p><p>由于 <a href="https://vuejs.press/zh/reference/config.html#markdown.headers" target="_blank" rel="noopener noreferrer">markdown.headers.level</a> 的默认值是 <code>[2, 3]</code> ，因此 <code>headerDepth</code> 的默认最大值是 <code>2</code> 。</p></div><h2 id="贡献者与最后更新时间" tabindex="-1"><a class="header-anchor" href="#贡献者与最后更新时间"><span>贡献者与最后更新时间</span></a></h2>',8)),a("p",null,[e[7]||(e[7]=t("详见 ")),n(i,{to:"/zh/guide/feature/meta.html"},{default:l(()=>e[6]||(e[6]=[t("页面元数据")])),_:1}),e[8]||(e[8]=t(" 章节。"))]),e[15]||(e[15]=s(`<h2 id="上-下一篇链接" tabindex="-1"><a class="header-anchor" href="#上-下一篇链接"><span>上 / 下一篇链接</span></a></h2><p>上一篇和下一篇文章的链接将会自动地根据当前页面的侧边栏的顺序来获取。你也可以通过主题选项或 frontmatter 来明确地重写或者禁用它:</p><div class="language-md" data-highlighter="shiki" data-ext="md" data-title="md" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">---</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">./some-other-page</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">false</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">---</span></span></code></pre></div><p>你也可以通过传递一个拥有 title, icon 和 link 的对象来完全自定义它。</p><h2 id="评论" tabindex="-1"><a class="header-anchor" href="#评论"><span>评论</span></a></h2>`,5)),a("p",null,[e[10]||(e[10]=t("具体详情请见 ")),n(i,{to:"/zh/guide/feature/comment.html"},{default:l(()=>e[9]||(e[9]=[t("评论")])),_:1}),e[11]||(e[11]=t(" 章节。"))]),e[16]||(e[16]=s(`<h2 id="自定义布局" tabindex="-1"><a class="header-anchor" href="#自定义布局"><span>自定义布局</span></a></h2><p>默认情况下，每个 <code>*.md</code> 文件将会被渲染在一个 <code>&lt;div class=&quot;page&quot;&gt;</code> 容器中，同时还有侧边栏、自动生成的编辑链接，以及上 / 下一篇文章的链接。如果你想要使用一个完全自定义的组件来代替当前的页面，你可以通过 frontmatter 来指定布局组件。</p><div class="language-md" data-highlighter="shiki" data-ext="md" data-title="md" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">---</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">layout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">SpecialLayout</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">---</span></span></code></pre></div><p>这将会为当前的页面渲染 VuePress 中注册的 SpecialLayout 布局。</p><div class="hint-container note"><p class="hint-container-title">注</p><p>主题只提供了 <code>Layout</code>，<code>404</code> 布局。</p><p>同时主题:</p><ul><li>在博客功能启用时提供 <code>Blog</code> 布局</li><li>在幻灯片功能启用时提供 <code>Slide</code> 布局</li></ul><p>如果你想使用你自己的布局，你可以在 <a href="https://vuejs.press/zh/advanced/cookbook/usage-of-client-config.html#layouts" target="_blank" rel="noopener noreferrer">客户端配置文件中注册布局</a>。</p></div><h2 id="自定义容器-class" tabindex="-1"><a class="header-anchor" href="#自定义容器-class"><span>自定义容器 Class</span></a></h2><p>默认情况下，每个页面都会渲染在 class 为 <code>theme-container</code> 的 <code>div</code> 中。如果你需要对特定页面应用一些特殊样式，你可以通过在 frontmatter 中设置 <code>containerClass</code> 来额外指定一个类名</p><div class="language-md" data-highlighter="shiki" data-ext="md" data-title="md" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">---</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">containerClass</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">fancy-container</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">---</span></span></code></pre></div><p>这将会为当前的页面渲染在 <code>&lt;div class=&quot;theme-container fancy-container&quot; /&gt;</code> 中。</p>`,9))])}const u=r(d,[["render",k],["__file","page.html.vue"]]),f=JSON.parse('{"path":"/zh/guide/layout/page.html","title":"页面","lang":"zh-CN","frontmatter":{"title":"页面","icon":"file","order":5,"category":["布局"],"tag":["布局","页面"],"description":"图标支持 你可以在页面的 frontmatter 中配置 icon 字段，填入对应图标的 FontClass 即可绑定图标到页面。 该图标会在导航栏，侧边栏，路径导航和标题中使用。 例子 相关信息 图标的相关设置，详见 路径导航 主题添加了开箱即用的路径导航支持。 你可以在主题选项和页面 Frontmatter 中通过 breadcrumb 设置一个布...","head":[["link",{"rel":"canonical","href":"https://theme-hope.vuejs.press/zh/guide/layout/page.html"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://vuepress-theme-hope.github.io/v2/guide/layout/page.html"}],["meta",{"property":"og:url","content":"https://vuepress-theme-hope.github.io/v2/zh/guide/layout/page.html"}],["meta",{"property":"og:site_name","content":"vuepress-theme-hope"}],["meta",{"property":"og:title","content":"页面"}],["meta",{"property":"og:description","content":"图标支持 你可以在页面的 frontmatter 中配置 icon 字段，填入对应图标的 FontClass 即可绑定图标到页面。 该图标会在导航栏，侧边栏，路径导航和标题中使用。 例子 相关信息 图标的相关设置，详见 路径导航 主题添加了开箱即用的路径导航支持。 你可以在主题选项和页面 Frontmatter 中通过 breadcrumb 设置一个布..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-09-23T16:54:16.000Z"}],["meta",{"property":"article:tag","content":"布局"}],["meta",{"property":"article:tag","content":"页面"}],["meta",{"property":"article:modified_time","content":"2024-09-23T16:54:16.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"页面\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-09-23T16:54:16.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hope\\",\\"url\\":\\"https://mister-hope.com\\"}]}"],["link",{"rel":"alternate","type":"application/atom+xml","href":"https://vuepress-theme-hope.github.io/v2/zh/atom.xml","title":"vuepress-theme-hope Atom Feed"}],["link",{"rel":"alternate","type":"application/json","href":"https://vuepress-theme-hope.github.io/v2/zh/feed.json","title":"vuepress-theme-hope JSON Feed"}],["link",{"rel":"alternate","type":"application/rss+xml","href":"https://vuepress-theme-hope.github.io/v2/zh/rss.xml","title":"vuepress-theme-hope RSS Feed"}]]},"headers":[{"level":2,"title":"图标支持","slug":"图标支持","link":"#图标支持","children":[]},{"level":2,"title":"路径导航","slug":"路径导航","link":"#路径导航","children":[]},{"level":2,"title":"文章信息展示","slug":"文章信息展示","link":"#文章信息展示","children":[]},{"level":2,"title":"标题列表","slug":"标题列表","link":"#标题列表","children":[{"level":3,"title":"设置标题深度","slug":"设置标题深度","link":"#设置标题深度","children":[]}]},{"level":2,"title":"贡献者与最后更新时间","slug":"贡献者与最后更新时间","link":"#贡献者与最后更新时间","children":[]},{"level":2,"title":"上 / 下一篇链接","slug":"上-下一篇链接","link":"#上-下一篇链接","children":[]},{"level":2,"title":"评论","slug":"评论","link":"#评论","children":[]},{"level":2,"title":"自定义布局","slug":"自定义布局","link":"#自定义布局","children":[]},{"level":2,"title":"自定义容器 Class","slug":"自定义容器-class","link":"#自定义容器-class","children":[]}],"git":{"createdTime":1644936187000,"updatedTime":1727110456000,"contributors":[{"name":"Mr.Hope","email":"mister-hope@outlook.com","commits":11}]},"readingTime":{"minutes":2.83,"words":849},"filePathRelative":"zh/guide/layout/page.md","localizedDate":"2022年2月15日","excerpt":"","autoDesc":true}');export{u as comp,f as data};
