import{a3 as d,Z as c,_ as r,a4 as u,a1 as e,a2 as t,$ as o,a0 as i,a5 as s,q as a}from"./framework-f408d5b9.js";const h={},_=e("p",null,"The following options control the appearance of the theme. You don’t need to pay attention to them in most cases, they are only provided for a small amount of users with needs.",-1),p=e("div",{class:"hint-container warning"},[e("p",{class:"hint-container-title"},"Note"),e("p",null,"These options are only valid when setting directly under the theme options, setting them in each language as no effect.")],-1),f={id:"iconassets",tabindex:"-1"},m=e("a",{class:"header-anchor",href:"#iconassets","aria-hidden":"true"},"#",-1),b=e("li",null,[t("Type: "),e("code",null,'"iconfont" | "fontawesome" | `//${string}` | `http://${string}` | `https://${string}` ')],-1),g=e("li",null,"Required: No",-1),y=e("p",null,[t("Link of font icon asset, "),e("code",null,"'iconfont'"),t(" and "),e("code",null,"'fontawesome'"),t(" keywords are supported.")],-1),w={id:"darkmode",tabindex:"-1"},k=e("a",{class:"header-anchor",href:"#darkmode","aria-hidden":"true"},"#",-1),x=e("li",null,[t("Type: "),e("code",null,'"switch" | "toggle" | "auto" | "enable" | "disable"')],-1),v=e("li",null,[t("Default: "),e("code",null,'"switch"')],-1),T=s('<p>Dark mode support options:</p><ul><li><code>&quot;switch&quot;</code>: switch between dark, light and auto</li><li><code>&quot;toggle&quot;</code>: toggle between lightmode and darkmode</li><li><code>&quot;auto&quot;</code>: Automatically decide whether to apply dark mode based on user device’s color-scheme or current time</li><li><code>&quot;enable&quot;</code>: only dark mode</li><li><code>&quot;disable&quot;</code>: disable dark mode</li></ul><div class="hint-container note"><p class="hint-container-title">Note</p><p>If you don’t need this feature, set <code>darkmode: &quot;disable&quot;</code> to disable it.</p></div>',3),D={id:"themecolor",tabindex:"-1"},q=e("a",{class:"header-anchor",href:"#themecolor","aria-hidden":"true"},"#",-1),R=e("li",null,[t("Type: "),e("code",null,"Record<string, string> | false")],-1),I=e("li",null,[t("Default: "),e("code",null,"false")],-1),N=e("p",null,"Theme color picker configuration.",-1),B={id:"fullscreen",tabindex:"-1"},C=e("a",{class:"header-anchor",href:"#fullscreen","aria-hidden":"true"},"#",-1),V=e("li",null,[t("Type: "),e("code",null,"boolean")],-1),$=e("li",null,[t("Default: "),e("code",null,"false")],-1),A=e("p",null,'Whether show the "full screen" button.',-1),P={id:"backtotop",tabindex:"-1"},W=e("a",{class:"header-anchor",href:"#backtotop","aria-hidden":"true"},"#",-1),E=e("li",null,[t("Type: "),e("code",null,"boolean | number")],-1),F=e("li",null,[t("Default: "),e("code",null,"true")],-1),L=e("p",null,"Whether show back to top button.",-1),S=e("p",null,[t("The default trigger distance is 300px, which can be changed when you fill in the number. Filling in "),e("code",null,"false"),t(" disables the back to top button.")],-1),Y={id:"mobilebreakpoint",tabindex:"-1"},U=e("a",{class:"header-anchor",href:"#mobilebreakpoint","aria-hidden":"true"},"#",-1),Z=s('<ul><li>Type: <code>number</code></li><li>Default: <code>719</code></li></ul><p>Window width switching mobile view and desktop view in pixels</p><div class="hint-container warning"><p class="hint-container-title">Note</p><p>You should keep this option same value with <code>$tablet</code> in <code>.vuepress/config.scss</code></p></div>',3),j={id:"pure",tabindex:"-1"},z=e("a",{class:"header-anchor",href:"#pure","aria-hidden":"true"},"#",-1),G=e("li",null,[t("Type: "),e("code",null,"boolean")],-1),H=e("li",null,[t("Default: "),e("code",null,"false")],-1),J=e("p",null,"Whether enable pure mode.",-1),K=e("div",{class:"hint-container tip"},[e("p",{class:"hint-container-title"},"Tips"),e("p",null,"Enabling this will disable some of the fancy styles."),e("p",null,'Useful when you want to provide "A pure document site".')],-1),M={id:"iconprefix",tabindex:"-1"},O=e("a",{class:"header-anchor",href:"#iconprefix","aria-hidden":"true"},"#",-1),Q=e("li",null,[t("Type: "),e("code",null,"string")],-1),X=e("li",null,"Default: Inferred from iconAssets",-1),ee=e("p",null,"Prefix of icon FontClass， usually, it can be automatically set by the theme.",-1);function te(oe,ne){const n=a("Badge"),l=a("RouterLink");return c(),r("div",null,[_,u(" more "),p,e("h2",f,[m,t(" iconAssets "),o(n,{text:"Root only",type:"warning"})]),e("ul",null,[b,g,e("li",null,[t("Details: "),o(l,{to:"/guide/interface/icon.html"},{default:i(()=>[t("Interface → Icon")]),_:1})])]),y,e("h2",w,[k,t(" darkmode "),o(n,{text:"Enabled by default"}),t(),o(n,{text:"Root only",type:"warning"})]),e("ul",null,[x,v,e("li",null,[t("Details: "),o(l,{to:"/guide/interface/darkmode.html"},{default:i(()=>[t("Interface → Darkmode")]),_:1})])]),T,e("h2",D,[q,t(" themeColor "),o(n,{text:"Root only",type:"warning"})]),e("ul",null,[R,I,e("li",null,[t("Details: "),o(l,{to:"/guide/interface/theme-color.html"},{default:i(()=>[t("Interface → ThemeColor")]),_:1})])]),N,e("h2",B,[C,t(" fullscreen "),o(n,{text:"Root only",type:"warning"})]),e("ul",null,[V,$,e("li",null,[t("Details: "),o(l,{to:"/guide/interface/others.html#fullscreen-button"},{default:i(()=>[t("Interface → FullScreen")]),_:1})])]),A,e("h2",P,[W,t(" backToTop "),o(n,{text:"Root only",type:"warning"})]),e("ul",null,[E,F,e("li",null,[t("Details: "),o(l,{to:"/guide/interface/others.html#back-to-top-button"},{default:i(()=>[t("Interface → Back to top button")]),_:1})])]),L,S,e("h2",Y,[U,t(" mobileBreakPoint "),o(n,{text:"Root only",type:"warning"})]),Z,e("h2",j,[z,t(" pure "),o(n,{text:"Root only",type:"warning"})]),e("ul",null,[G,H,e("li",null,[t("Details: "),o(l,{to:"/guide/interface/pure.html"},{default:i(()=>[t("Interface → Pure mode")]),_:1})])]),J,K,e("h2",M,[O,t(" iconPrefix "),o(n,{text:"Root only",type:"warning"})]),e("ul",null,[Q,X,e("li",null,[t("Details: "),o(l,{to:"/guide/interface/icon.html"},{default:i(()=>[t("Interface → Icon")]),_:1})])]),ee])}const ie=d(h,[["render",te],["__file","appearance.html.vue"]]);export{ie as default};
