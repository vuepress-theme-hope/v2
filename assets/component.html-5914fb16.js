import{a3 as t,Z as e,_ as p,a4 as o,a1 as n,a2 as s,$ as c,a5 as i,q as u}from"./framework-f408d5b9.js";const l={},r=n("p",null,"В этом руководстве вы узнаете, как использовать компоненты Vue и синтаксис Vue в вашем проекте VuePress.",-1),d=n("h2",{id:"импорт-компонентов-vue-глобально",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#импорт-компонентов-vue-глобально","aria-hidden":"true"},"#"),s(" Импорт компонентов Vue глобально")],-1),k=n("h3",{id:"регистрация-через-vuepress-plugin-register-components",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#регистрация-через-vuepress-plugin-register-components","aria-hidden":"true"},"#"),s(" Регистрация через "),n("code",null,"@vuepress/plugin-register-components")],-1),m=n("p",null,[s("Вы можете автоматически регистрировать компоненты с помощью плагина "),n("code",null,"@vuepress/plugin-register-components"),s(".")],-1),g={href:"https://v2.vuepress.vuejs.org/reference/plugin/register-components.html",target:"_blank",rel:"noopener noreferrer"},v=i(`<h3 id="регистрация-через-clientconfigfile" tabindex="-1"><a class="header-anchor" href="#регистрация-через-clientconfigfile" aria-hidden="true">#</a> Регистрация через ClientConfigFile</h3><p>Вы можете создать <code>.vuepress/client.ts</code> и зарегистрировать компоненты вручную.</p><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// .vuepress/client.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> defineClientConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@vuepress/client&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> MyComponent <span class="token keyword">from</span> <span class="token string">&quot;./MyComponent.vue&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineClientConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function-variable function">enhance</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> app<span class="token punctuation">,</span> router<span class="token punctuation">,</span> siteData <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    app<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&quot;MyComponent&quot;</span><span class="token punctuation">,</span> MyComponent<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="использование-синтаксиса-и-компонентов-vue-в-markdown" tabindex="-1"><a class="header-anchor" href="#использование-синтаксиса-и-компонентов-vue-в-markdown" aria-hidden="true">#</a> Использование синтаксиса и компонентов Vue в Markdown</h2><p>Вы можете использовать синтаксис Vue непосредственно в Markdown.</p><div class="hint-container info"><p class="hint-container-title">Инфо</p><p>Для конкретного использования смотрите [VuePress → Markdown](../vuepress/markdown.md#Use -vue in -markdown-)</p></div><p>Если вам нужно импортировать компоненты Vue в Markdown, обратите внимание, что вы не можете использовать относительные пути для импорта или писать несколько блоков <code>&lt;script&gt;</code>.</p><div class="hint-container info"><p class="hint-container-title">Markdown с Vue SFC</p><p>Каждый файл Markdown сначала компилируется в HTML, а затем преобразуется в компонент одного файла Vue (SFC). Другими словами, вы можете писать файлы Markdown, такие как Vue SFC:</p><p>Теги <code>&lt;script&gt;</code> и <code>&lt;style&gt;</code> напрямую обрабатываются как теги в Vue SFC. Другими словами, они продвигаются из тега <code>&lt;template&gt;</code> на верхний уровень SFC. Весь контент, кроме тегов <code>&lt;script&gt;</code> и <code>&lt;style&gt;</code>, будет скомпилирован в HTML, а затем обработан как теги <code>&lt;template&gt;</code> в Vue SFC.</p><p>Поскольку однофайловые компоненты Vue могут содержать только один тег <code>&lt;script&gt;</code>, вам следует избегать использования более одного тега <code>&lt;script&gt;</code> в VuePress Markdown.</p><p>Кроме того, поскольку Markdown будет преобразован в однофайловые компоненты Vue в каталоге кеша, любой импорт относительного пути будет недопустимым в Vue SFC.</p></div><p>Чтобы корректно импортировать собственные компоненты, вам необходимо создать для них псевдонимы, сделать это можно с помощью опции <code>alias</code>:</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// .vuepress/config.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> getDirname<span class="token punctuation">,</span> path <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@vuepress/utils&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> __dirname <span class="token operator">=</span> <span class="token function">getDirname</span><span class="token punctuation">(</span><span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  alias<span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;@MyComponent&quot;</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&quot;components/MyComponent.vue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-markdown" data-ext="md"><pre class="language-markdown"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MyComponent</span> <span class="token punctuation">/&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
import MyComponent from &quot;@MyComponent&quot;;
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>Это немного сложнее, но если компонент используется только на одной странице, такой импорт имеет преимущества:</p><ul><li>Глобальный импорт означает, что код компонента нужно загрузить при инициализации VuePress, то есть при посещении первой страницы</li><li>Импорт в Markdown приводит к включению кода компонента в код страницы, чтобы он загружался только при посещении страницы</li></ul>`,13);function h(f,_){const a=u("ExternalLinkIcon");return e(),p("div",null,[r,o(" more "),d,k,m,n("p",null,[s("Подробнее об использовании плагина смотрите в "),n("a",g,[s("Официальной документации"),c(a)]),s(".")]),v])}const w=t(l,[["render",h],["__file","component.html.vue"]]);export{w as default};
