import{aj as o,ak as p,ao as t,an as l,am as r,ap as n,aq as a,as as i,ar as d,al as h}from"./app-3Fu3LGel.js";const m={},k={class:"hint-container tip"},c={class:"hint-container info"};function g(u,e){const s=d("RouteLink");return h(),p("div",null,[e[12]||(e[12]=t("p",null,"本教程指引你如何在 VuePress 项目中生成页面。",-1)),l(" more "),e[13]||(e[13]=r(`<h2 id="页面的生成" tabindex="-1"><a class="header-anchor" href="#页面的生成"><span>页面的生成</span></a></h2><p>VuePress 是以 Markdown 为中心的。你项目中的每一个 Markdown 文件都是一个单独的页面。</p><p>默认情况下，页面的路由路径是根据你的 Markdown 文件的相对路径决定的。</p><p>由于你的项目是通过创建助手生成的，那么你会得到以下文件结构:</p><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>└─ src</span></span>
<span class="line"><span>   ├─ demo</span></span>
<span class="line"><span>   │  ├─ ...</span></span>
<span class="line"><span>   │  └─ page.md</span></span>
<span class="line"><span>   │  └─ markdown.md</span></span>
<span class="line"><span>   │  └─ README.md</span></span>
<span class="line"><span>   ├─ ...</span></span>
<span class="line"><span>   └─ README.md</span></span></code></pre></div><p>你的 Markdown 文件对应的路由路径为:</p><table><thead><tr><th>相对路径</th><th>路由路径</th></tr></thead><tbody><tr><td><code>/README.md</code></td><td><code>/</code></td></tr><tr><td><code>/demo/README.md</code></td><td><code>/demo/</code></td></tr><tr><td><code>/demo/page.md</code></td><td><code>/demo/page.html</code></td></tr></tbody></table><div class="hint-container tip"><p class="hint-container-title"><a href="http://README.md" target="_blank" rel="noopener noreferrer">README.md</a></p><p><code>README.md</code> 是特例，在 Markdown 中，按照约定俗成，它会作为所在文件夹的主页。所以在渲染为网页时，它的对应路径为网页中的主页路径 <code>index.html</code>。</p><p>这应该很好理解。</p></div><h2 id="markdown" tabindex="-1"><a class="header-anchor" href="#markdown"><span>Markdown</span></a></h2><p>每一个 Markdown 文件都会被 VuePress Theme Hope 处理，将文件内容渲染为网页内容。</p><p>你可以尝试自己编辑 Markdown 文件来修改模板的内容。如果你已启动开发服务器，那么修改后的结果会被实时同步到开发服务器上。</p>`,11)),t("div",k,[e[3]||(e[3]=t("p",{class:"hint-container-title"},"Markdown 语法",-1)),t("p",null,[e[1]||(e[1]=n("如果你尚不了解 Markdown，请查看 ")),a(s,{to:"/zh/cookbook/markdown/"},{default:i(()=>e[0]||(e[0]=[n("Markdown 教程")])),_:1}),e[2]||(e[2]=n("。"))]),e[4]||(e[4]=t("p",null,"大概十五分钟，你就可以学会如何书写 Markdown，看完之后记得回来！",-1))]),t("div",c,[e[11]||(e[11]=t("p",{class:"hint-container-title"},"Markdown 语法扩展",-1)),t("ul",null,[t("li",null,[t("p",null,[e[6]||(e[6]=n("VuePress 自身对 Markdown 语法进行了一些扩展，关于这些扩展的语法，详见 ")),a(s,{to:"/zh/cookbook/vuepress/markdown.html"},{default:i(()=>e[5]||(e[5]=[n("VuePress → Markdown")])),_:1}),e[7]||(e[7]=n("。"))])]),t("li",null,[t("p",null,[e[9]||(e[9]=n("主题通过 VuePress 插件额外启用了一些语法扩展，详见 ")),a(s,{to:"/zh/guide/intro/markdown.html"},{default:i(()=>e[8]||(e[8]=[n("指南 → Markdown")])),_:1}),e[10]||(e[10]=n("。"))])])])]),e[14]||(e[14]=r(`<h2 id="frontmatter" tabindex="-1"><a class="header-anchor" href="#frontmatter"><span>Frontmatter</span></a></h2><p>Frontmatter 是 VuePress 中很重要的一个概念，它用于承载 Markdown 文件的配置。Markdown 文件可以包含一个 <a href="https://yaml.org/" target="_blank" rel="noopener noreferrer">YAML</a> Frontmatter。</p><div class="hint-container info"><p class="hint-container-title">YAML</p><p>如果你对 YAML 也不熟悉，你可以查看 <a href="https://mister-hope.com/code/language/yaml/" target="_blank" rel="noopener noreferrer">YAML 教程</a>。</p></div><p>Frontmatter 必须在 Markdown 文件的顶部，并且被包裹在一对三短划线中间。下面是一个基本的示例:</p><div class="language-md" data-highlighter="shiki" data-ext="md" data-title="md" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">---</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">lang</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">zh-CN</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">title</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">页面的标题</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">description</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">页面的描述</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">---</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">&lt;!-- 这里是 Markdown 内容 --&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">...</span></span></code></pre></div><p>你也许注意到案例中 Frontmatter 中的字段和 <a href="https://vuejs.press/zh/guide/configuration.html#%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6" target="_blank" rel="noopener noreferrer">VuePress 配置文件</a> 十分类似。你可以通过 Frontmatter 来覆盖当前页面的 <code>lang</code>, <code>title</code>, <code>description</code> 等属性。因此，你可以把 Frontmatter 当作页面级作用域的配置，它通常具有最高优先级，所作配置仅对当前页面生效。</p>`,6))])}const A=o(m,[["render",g],["__file","content.html.vue"]]),y=JSON.parse('{"path":"/zh/get-started/content.html","title":"项目内容","lang":"zh-CN","frontmatter":{"title":"项目内容","icon":"file","order":4,"category":["快速上手","基础知识","教程"],"tag":["项目内容"],"description":"本教程指引你如何在 VuePress 项目中生成页面。","head":[["link",{"rel":"canonical","href":"https://theme-hope.vuejs.press/zh/get-started/content.html"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://vuepress-theme-hope.github.io/v2/get-started/content.html"}],["meta",{"property":"og:url","content":"https://vuepress-theme-hope.github.io/v2/zh/get-started/content.html"}],["meta",{"property":"og:site_name","content":"vuepress-theme-hope"}],["meta",{"property":"og:title","content":"项目内容"}],["meta",{"property":"og:description","content":"本教程指引你如何在 VuePress 项目中生成页面。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-09-20T11:00:29.000Z"}],["meta",{"property":"article:tag","content":"项目内容"}],["meta",{"property":"article:modified_time","content":"2024-09-20T11:00:29.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"项目内容\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-09-20T11:00:29.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hope\\",\\"url\\":\\"https://mister-hope.com\\"}]}"],["link",{"rel":"alternate","type":"application/atom+xml","href":"https://vuepress-theme-hope.github.io/v2/zh/atom.xml","title":"vuepress-theme-hope Atom Feed"}],["link",{"rel":"alternate","type":"application/json","href":"https://vuepress-theme-hope.github.io/v2/zh/feed.json","title":"vuepress-theme-hope JSON Feed"}],["link",{"rel":"alternate","type":"application/rss+xml","href":"https://vuepress-theme-hope.github.io/v2/zh/rss.xml","title":"vuepress-theme-hope RSS Feed"}]]},"headers":[{"level":2,"title":"页面的生成","slug":"页面的生成","link":"#页面的生成","children":[]},{"level":2,"title":"Markdown","slug":"markdown","link":"#markdown","children":[]},{"level":2,"title":"Frontmatter","slug":"frontmatter","link":"#frontmatter","children":[]}],"git":{"createdTime":1648799705000,"updatedTime":1726830029000,"contributors":[{"name":"Mister-Hope","email":"mister-hope@outlook.com","commits":1},{"name":"Mr.Hope","email":"mister-hope@outlook.com","commits":5}]},"readingTime":{"minutes":2.08,"words":623},"filePathRelative":"zh/get-started/content.md","localizedDate":"2022年4月1日","excerpt":"<p>本教程指引你如何在 VuePress 项目中生成页面。</p>\\n","autoDesc":true}');export{A as comp,y as data};
