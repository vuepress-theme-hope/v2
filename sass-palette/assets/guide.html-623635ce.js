import{_ as s,W as a,X as n,a1 as e}from"./framework-eb069dea.js";const t={},p=e(`<p>这个插件基本上是面向插件和主题开发的。</p><h2 id="id" tabindex="-1"><a class="header-anchor" href="#id" aria-hidden="true">#</a> ID</h2><p>首先，你应该了解此插件的设计目标是提供跨越插件和主题的支持。(而并不像官方插件仅面向主题)。</p><p>我们提供了 <code>id</code> 选项来执行此操作，并且使用具有相同 ID 的此插件 (通过调用 <code>useSassPalette</code>) 不会有任何副作用。 此外，所有别名和模块名称都有一个 ID 前缀。</p><p>这将允许你:</p><ul><li><p>使用相同的 ID 在你的插件 (或主题) 间共享同一个样式系统，而不会产生任何副作用。</p><p>这意味着你可以在你的插件 (或主题) 中使用相同的样式变量来统一你的样式。</p><div class="hint-container tip"><p class="hint-container-title">示例</p><p><code>vuepress-theme-hope</code> 及其所有插件都使用相同 ID <code>hope</code> 调用插件，因此所有颜色变量、断点和其他样式配置都可以在同一个文件中完成，并且可以跨主题和插件进行统一。</p></div></li><li><p>设置不同的 ID 时，插件们和主题之间互相完全独立。我们建议你使用你的插件名称设置 <code>id</code> 变量。</p><p>使用默认设置，用户将在 <code>.vuepress/styles</code> 文件夹下设置你的插件样式，其中 Sass 文件以你的 ID 前缀开头。你可以使用 <code>\${id}-config</code> 访问所需的变量。</p><div class="hint-container tip"><p class="hint-container-title">示例</p><p><code>vuepress-theme-hope</code> 正在使用 ID <code>&quot;hope&quot;</code>，而假设 <code>vuepress-plugin-abc</code> 正在使用 <code>&quot;abc&quot;</code>。他们可以分别使用 <code>hope-config</code> 和 <code>abc-config</code> 模块名称获取自己的变量。</p></div></li></ul><h2 id="样式" tabindex="-1"><a class="header-anchor" href="#样式" aria-hidden="true">#</a> 样式</h2><p>我们这里有三个样式概念: 配置、调色板和生成器。</p><h2 id="配置" tabindex="-1"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> 配置</h2><p>配置文件仅用于提供 Sass 变量。它所包含 Sass 变量可以在其他文件中使用。</p><p>你可以指定一个文件作为用户配置文件。这样你可以稍后在插件 Sass 文件中访问包含每个变量的模块。此外，你还可以提供默认配置文件，你可以在其中使用 <code>!default</code> 为变量设置默认值。</p><details class="hint-container details"><summary>一个例子</summary><p>在这里，你正在使用下列选项调用插件:</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token function">useSassPalette</span><span class="token punctuation">(</span>app<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&quot;abc&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">defaultConfig</span><span class="token operator">:</span> <span class="token string">&quot;vuepress-plugin-abc/styles/config.scss&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>如果用户设置了:</p><div class="language-scss" data-ext="scss"><pre class="language-scss"><code><span class="token comment">// .vuepress/styles/abc-palette.scss</span>
<span class="token property"><span class="token variable">$colorA</span></span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
</code></pre></div><p>同时你正在提供如下默认配置文件:</p><div class="language-scss" data-ext="scss"><pre class="language-scss"><code><span class="token comment">// vuepress-plugin-abc/styles/palette.scss</span>
<span class="token property"><span class="token variable">$colorA</span></span><span class="token punctuation">:</span> blue <span class="token statement keyword">!default</span><span class="token punctuation">;</span>
<span class="token property"><span class="token variable">$colorB</span></span><span class="token punctuation">:</span> green <span class="token statement keyword">!default</span><span class="token punctuation">;</span>
</code></pre></div><p>你可以在插件 Sass 文件中中获取到如下变量:</p><div class="language-scss" data-ext="scss"><pre class="language-scss"><code><span class="token comment">// Vue 单文件组件的 &lt;style lang=&quot;scss&quot;&gt; 块或脚本中直接导入的 Scss 文件中</span>
<span class="token keyword">@debug</span> abc-config.<span class="token variable">$colorA</span><span class="token punctuation">;</span> <span class="token comment">// red</span>
<span class="token keyword">@debug</span> abc-config.<span class="token variable">$colorB</span><span class="token punctuation">;</span> <span class="token comment">// green</span>
</code></pre></div></details><h3 id="限制" tabindex="-1"><a class="header-anchor" href="#限制" aria-hidden="true">#</a> 限制</h3><p>我们正在使用 <code>additionalData</code> 选项让 <code>\${id}-config</code> 模块在你的样式中可用，但这有一些限制。</p><p><code>additionalData</code> 仅适用于 Scss 入口，因此 <code>\${id}-config</code> 仅适用于:</p><ul><li>Vue 单文件组件的 <code>&lt;style lang=&quot;scss&quot;&gt;</code> 块</li><li>脚本中直接导入的 Scss 文件 (例如: 客户端应用程序增强文件中的 <code>import &quot;./a-scss-file.scss&quot;</code>) 。</li></ul><p>如果 Scss 文件不是直接导入的，而是通过 <code>@use</code> 或 <code>@import</code> API 导入的，模块将不可用。因此，在这种情况下，你应该使用 <code>@use &quot;@sass-palette/\${id}-config&quot;;</code> 自行导入模块。</p><h3 id="保留的配置名称" tabindex="-1"><a class="header-anchor" href="#保留的配置名称" aria-hidden="true">#</a> 保留的配置名称</h3><p><code>$dark-selector</code> 保留用于深色模式选择器。如果你希望你的插件或主题支持深色模式，则需要设置此变量。此变量稍后将在调色板文件中使用。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><ul><li><p>如果你正在开发插件，你可以在默认配置文件中设置 <code>$dark-selector: html.dark !default;</code>，因为 <code>@vuepress/theme-default</code> 正在这样做。</p><p>你的插件将在默认主题正常工作，如果用户使用具有不同深色模式选择器的第三方主题，则用户可以在配置文件中更改此选择器。</p></li><li><p>如果你在开发主题，你可以在默认配置文件中设置 <code>$dark-selector</code> 为你的深色模式选择器同时不包含 <code>!default</code>，这样用户就不能覆盖它。</p></li></ul></div><h2 id="调色板" tabindex="-1"><a class="header-anchor" href="#调色板" aria-hidden="true">#</a> 调色板</h2><p>调色板文件用于 CSS 变量注入，其中每个变量将被注入到 root 中，变量名称转换为 kebab-name 格式。</p><p>你可以指定一个文件作为用户调色板文件，默认文件名是 <code>\${id}-palette.scss</code>。 此外，你还可以提供一个默认的调色板文件，你可以在其中使用 <code>!default</code> 为变量设置默认值。</p><details class="hint-container details"><summary>一个例子</summary><p>在这里，你正在使用如下选项调用插件:</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token function">useSassPalette</span><span class="token punctuation">(</span>app<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&quot;abc&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">defaultPalette</span><span class="token operator">:</span> <span class="token string">&quot;vuepress-plugin-abc/styles/palette.scss&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>如果用户设置:</p><div class="language-scss" data-ext="scss"><pre class="language-scss"><code><span class="token comment">// .vuepress/styles/abc-palette.scss</span>
<span class="token property"><span class="token variable">$colorA</span></span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
</code></pre></div><p>同时你正在提供如下默认调色板文件:</p><div class="language-scss" data-ext="scss"><pre class="language-scss"><code><span class="token comment">// vuepress-plugin-abc/styles/palette.scss</span>
<span class="token property"><span class="token variable">$colorA</span></span><span class="token punctuation">:</span> blue <span class="token statement keyword">!default</span><span class="token punctuation">;</span>
<span class="token property"><span class="token variable">$colorB</span></span><span class="token punctuation">:</span> green <span class="token statement keyword">!default</span><span class="token punctuation">;</span>
</code></pre></div><p>然后下面的 CSS 变量将在 root 选择器下可用:</p><div class="language-scss" data-ext="scss"><pre class="language-scss"><code><span class="token selector">:root </span><span class="token punctuation">{</span>
  <span class="token property">--color-a</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
  <span class="token property">--color-b</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div></details><h3 id="颜色设置" tabindex="-1"><a class="header-anchor" href="#颜色设置" aria-hidden="true">#</a> 颜色设置</h3><p>由于默认主题支持深色模式，因此你可能希望在浅色模式和深色模式下使用不同的颜色。</p><p>为此，你应该使用包含 <code>light</code> 和 <code>dark</code> 键的映射设置颜色变量。 稍后，该插件将在你的配置中读取 <code>$dark-selector</code> 并为你生成不同的颜色。</p><details class="hint-container details"><summary>一个例子</summary><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token comment">// 用户调色板</span>
<span class="token property"><span class="token variable">$text-color</span></span><span class="token punctuation">:</span> <span class="token punctuation">(</span>
  <span class="token property">light</span><span class="token punctuation">:</span> #222<span class="token punctuation">,</span>
  <span class="token property">dark</span><span class="token punctuation">:</span> #999<span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 默认调色板</span>
<span class="token property"><span class="token variable">$text-color</span></span><span class="token punctuation">:</span> <span class="token punctuation">(</span>
  <span class="token property">light</span><span class="token punctuation">:</span> #2c3e50<span class="token punctuation">,</span>
  <span class="token property">dark</span><span class="token punctuation">:</span> #9e9e9e<span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token statement keyword">!default</span><span class="token punctuation">;</span>
<span class="token property"><span class="token variable">$bg-color</span></span><span class="token punctuation">:</span> <span class="token punctuation">(</span>
  <span class="token property">light</span><span class="token punctuation">:</span> #fff<span class="token punctuation">,</span>
  <span class="token property">dark</span><span class="token punctuation">:</span> #1e1e1e<span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token statement keyword">!default</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后，如果在配置文件中 <code>$dark-selector</code> 的值为 <code>&quot;html.dark&quot;</code>，你会得到:</p><div class="language-scss" data-ext="scss"><pre class="language-scss"><code><span class="token selector">:root </span><span class="token punctuation">{</span>
  <span class="token property">--text-color</span><span class="token punctuation">:</span> #222<span class="token punctuation">;</span>
  <span class="token property">--bg-color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">html.dark </span><span class="token punctuation">{</span>
  <span class="token property">--text-color</span><span class="token punctuation">:</span> #999<span class="token punctuation">;</span>
  <span class="token property">--bg-color</span><span class="token punctuation">:</span> #1e1e1e<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div></details><h3 id="允许的变量类型" tabindex="-1"><a class="header-anchor" href="#允许的变量类型" aria-hidden="true">#</a> 允许的变量类型</h3><p>调色板中只允许使用颜色 (或颜色映射)、长度和字符串。任何其他类型都将被删除。</p><div class="hint-container note"><p class="hint-container-title">为什么除了字符串只允许颜色和长度</p><p>在常见情况下，你可能只想计算颜色和长度。所以放弃其他类型支持是相当安全的，因为你想要的任何其他值都可以转换为字符串。</p><details class="hint-container details"><summary>示例</summary><p>如果你想要一个 <code>--move-transition</code> 和 <code>width 0.3s ease</code>，你可以使用字符串:</p><div class="language-scss" data-ext="scss"><pre class="language-scss"><code><span class="token comment">// 这将被 sass 视为一个类型为 (length, time, function) 的列表</span>
<span class="token comment">// 并会触发警告并被插件删除</span>
<span class="token property"><span class="token variable">$moveTransition</span></span><span class="token punctuation">:</span> width 0.3s ease<span class="token punctuation">;</span>

<span class="token comment">// 这会得到你想要的</span>
<span class="token comment">// :root {</span>
<span class="token comment">//   --move-transition: width 0.3s ease</span>
<span class="token comment">// }</span>
<span class="token property"><span class="token variable">$moveTransition</span></span><span class="token punctuation">:</span> <span class="token string">&quot;width 0.3s ease&quot;</span><span class="token punctuation">;</span>
</code></pre></div></details></div><h3 id="在配置模块中可用" tabindex="-1"><a class="header-anchor" href="#在配置模块中可用" aria-hidden="true">#</a> 在配置模块中可用</h3><p>与配置文件相同，调色板中的任何变量都将被注入到 <code>\${id}-config</code> 模块中，以防万一你想在 sass 文件中使用它们。</p><h2 id="辅助模块" tabindex="-1"><a class="header-anchor" href="#辅助模块" aria-hidden="true">#</a> 辅助模块</h2><p>我们公开了 <code>vuepress-plugin-sass-palette</code> 使用的内部函数，作为辅助模块。</p><p>你可以通过 <code>@sass-palette/helper</code> 别名使用此辅助模块，并调用其函数来自己实现类似的功能。</p><h2 id="生成器" tabindex="-1"><a class="header-anchor" href="#生成器" aria-hidden="true">#</a> 生成器</h2><p>生成器文件面向开发人员使用配置或调色板文件变量生成衍生值。</p><p>生成器变量也将像调色板一样作为 CSS 变量注入，它们也可以在配置模块中使用。</p><details class="hint-container details"><summary>示例</summary><p>你可能想要一个基于 <code>$theme-color</code> 的 <code>$theme-color-light</code>。所以你可以这样写一个生成器:</p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token keyword">@use</span> <span class="token string">&quot;sass:color&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">@use</span> <span class="token string">&quot;sass:list&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">@use</span> <span class="token string">&quot;sass:map&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">@use</span> <span class="token string">&quot;@sass-palette/helper&quot;</span><span class="token punctuation">;</span>

<span class="token property"><span class="token variable">$theme-color-light</span></span><span class="token punctuation">:</span> <span class="token punctuation">(</span>
  <span class="token property">light</span><span class="token punctuation">:</span> color.<span class="token function">scale</span><span class="token punctuation">(</span>helper.<span class="token function">get-color</span><span class="token punctuation">(</span><span class="token variable">$theme-color</span><span class="token punctuation">,</span> <span class="token property"><span class="token variable">$isDark</span></span><span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token property"><span class="token variable">$lightness</span></span><span class="token punctuation">:</span>
        10%<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token property">dark</span><span class="token punctuation">:</span> color.<span class="token function">scale</span><span class="token punctuation">(</span>helper.<span class="token function">get-color</span><span class="token punctuation">(</span><span class="token variable">$theme-color</span><span class="token punctuation">,</span> <span class="token property"><span class="token variable">$isDark</span></span><span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token property"><span class="token variable">$lightness</span></span><span class="token punctuation">:</span>
        10%<span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token statement keyword">!default</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="用户样式" tabindex="-1"><a class="header-anchor" href="#用户样式" aria-hidden="true">#</a> 用户样式</h2><p>如果你是主题开发人员，你可能希望为你的用户提供一种自定义主题或网站的方法。</p><p>在这种情况下，你应该在使用此插件时将 <code>style</code> 选项设置为用户样式文件。</p><p>稍后，你应该通过在你的主题样式之后导入 <code>@sass-palette/\${id}-style</code> 来手动包含用户样式文件。</p><div class="hint-container note"><p class="hint-container-title">注</p><p><code>@sass-palette/\${id}-style</code> 是用户样式文件的别名，你可以在 JS/TS/SASS 中导入它。</p></div><h2 id="别名" tabindex="-1"><a class="header-anchor" href="#别名" aria-hidden="true">#</a> 别名</h2><p>可用的别名如下:</p><ul><li>配置: <code>@sass-palette/\${id}-config</code> (基于 <code>id</code>)</li><li>调色板: <code>@sass-palette/\${id}-palette</code> (基于 <code>id</code>)</li><li>样式: <code>@sass-palette/\${id}-style</code> (仅在设置了 <code>style</code> 选项时可用)</li><li>助手: <code>@sass-palette/helper</code></li></ul>`,48),o=[p];function c(l,i){return a(),n("div",null,o)}const u=s(t,[["render",c],["__file","guide.html.vue"]]);export{u as default};
