import{_ as o,Z as e,$ as c,a5 as p,a2 as n,a3 as a,a0 as t,a4 as l,I as i}from"./framework-b3333173.js";const u={},r=n("p",null,"This component is used to display font icons.",-1),d=n("p",null,"You can use it in Markdown to add an iconã€‚",-1),h=n("h2",{id:"demo",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#demo","aria-hidden":"true"},"#"),a(" Demo")],-1),k=l(`<div class="language-markdown" data-ext="md"><pre class="language-markdown"><code><span class="token list punctuation">-</span> Home icon: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FontIcon</span> <span class="token attr-name">icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>home<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>

<span class="token list punctuation">-</span> A big and red markdown icon: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FontIcon</span> <span class="token attr-name">icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>markdown<span class="token punctuation">&quot;</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>red<span class="token punctuation">&quot;</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>32<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre></div><h2 id="props" tabindex="-1"><a class="header-anchor" href="#props" aria-hidden="true">#</a> Props</h2><h3 id="icon" tabindex="-1"><a class="header-anchor" href="#icon" aria-hidden="true">#</a> icon</h3><ul><li>Type: <code>string</code></li><li>Required: Yes</li></ul><p>Icon name</p><h3 id="color" tabindex="-1"><a class="header-anchor" href="#color" aria-hidden="true">#</a> color</h3><ul><li>Type: <code>string</code></li><li>Default: <code>&#39;inherit&#39;</code></li></ul><p>Color used for icon.</p><h3 id="size" tabindex="-1"><a class="header-anchor" href="#size" aria-hidden="true">#</a> size</h3><ul><li>Type: <code>number | string</code></li><li>Default: <code>Current font size</code></li></ul><p>Icon size.</p>`,11);function m(_,f){const s=i("FontIcon");return e(),c("div",null,[r,d,p(" more "),h,n("ul",null,[n("li",null,[n("p",null,[a("Home icon: "),t(s,{icon:"home"})])]),n("li",null,[n("p",null,[a("A big and red markdown icon: "),t(s,{icon:"markdown",color:"red",size:"32"})])])]),k])}const q=o(u,[["render",m],["__file","fonticon.html.vue"]]);export{q as default};
