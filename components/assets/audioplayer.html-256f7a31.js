import{_ as t,Z as o,$ as p,a5 as c,a0 as s,a2 as a,a3 as i,a4 as n,I as l}from"./framework-b3333173.js";const r={},d=a("p",null,"Embed audios in Markdown files.",-1),u=a("h2",{id:"demo",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#demo","aria-hidden":"true"},"#"),i(" Demo")],-1),h=a("p",null,"An audio player:",-1),m=n(`<div class="language-markdown" data-ext="md"><pre class="language-markdown"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AudioPlayer</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/sample.mp3<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre></div><p>An audio player with poster and title:</p>`,2),k=n(`<div class="language-markdown" data-ext="md"><pre class="language-markdown"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AudioPlayer</span>
  <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/sample.mp3<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>A Sample Audio<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">poster</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/logo.svg<span class="token punctuation">&quot;</span></span>
<span class="token punctuation">/&gt;</span></span>
</code></pre></div><h2 id="props" tabindex="-1"><a class="header-anchor" href="#props" aria-hidden="true">#</a> Props</h2><h3 id="src" tabindex="-1"><a class="header-anchor" href="#src" aria-hidden="true">#</a> src</h3><ul><li>Type: <code>string</code></li><li>Required: Yes</li></ul><p>Audio source link</p><h3 id="width" tabindex="-1"><a class="header-anchor" href="#width" aria-hidden="true">#</a> width</h3><ul><li>Type: <code>string | number</code></li><li>Default: <code>100%</code></li></ul><p>Audio component width.</p><h3 id="type" tabindex="-1"><a class="header-anchor" href="#type" aria-hidden="true">#</a> type</h3><ul><li>Type: <code>string</code></li><li>Required: No</li></ul><p>Audio type.</p><div class="hint-container note"><p class="hint-container-title">Note</p><p>If your server cannot return a correct mime type for your audio files, you should specific it. (e.g.: <code>audio/mp3</code>)</p></div><h3 id="poster" tabindex="-1"><a class="header-anchor" href="#poster" aria-hidden="true">#</a> poster</h3><ul><li>Type: <code>string</code></li><li>Required: No</li></ul><p>Audio poster</p>`,15);function _(g,y){const e=l("AudioPlayer");return o(),p("div",null,[d,c(" more "),u,h,s(e,{src:"/sample.mp3"}),m,s(e,{src:"/sample.mp3",title:"A Sample Audio",poster:"/logo.svg"}),k])}const v=t(r,[["render",_],["__file","audioplayer.html.vue"]]);export{v as default};
