import{_ as n,W as a,X as s,a1 as t}from"./framework-eb069dea.js";const p={},e=t(`<p>本插件可以自动处理你站点的重定向。</p><h2 id="控制页面重定向" tabindex="-1"><a class="header-anchor" href="#控制页面重定向" aria-hidden="true">#</a> 控制页面重定向</h2><p>如果你改动了已有页面的地址，你可以在 Frontmatter 中使用 <code>redirectFrom</code> 选项设置重定向到此页面的地址，这样可以保证用户在访问旧链接时重定向到新的地址。</p><p>如果你需要将已有的页面重定向到新的页面，可以在 Frontmatter 中使用 <code>redirectTo</code> 选项设置需要重定向到的地址。这样该页面会在访问时重定向到新的地址。</p><h2 id="重定向到页面" tabindex="-1"><a class="header-anchor" href="#重定向到页面" aria-hidden="true">#</a> 重定向到页面</h2><p>你可以通过设置插件选项中的 <code>config</code> 设置一个重定向映射。你可以传入一个对象，其中的每个键值对都是一个重定向的映射。</p><p>对于每个重定向映射来说，键名是重定向的源地址，键值是重定向的目标地址。其中键名必须是一个绝对路径，键值可以是一个绝对路径，也可以是一个完整路径。</p><p>当你在插件选项传入 <code>hostname</code> 时，所有绝对路径形式重定向地址均会添加 <code>hostname</code> 与 <code>base</code> 转换为一个完整路径。</p><div class="hint-container tip"><p class="hint-container-title">例子</p><p>当你通过下列选项调用插件且 <code>base</code> 为 <code>/</code> 时:</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token function">redirect</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">hostname</span><span class="token operator">:</span> <span class="token string">&quot;https://example.com&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">config</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;/foo.html&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/bar.html&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;/baz.html&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://example.com/qux.html&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>插件会将 <code>/foo.html</code> 重定向到 <code>https://example.com/bar.html</code>，<code>/baz.html</code> 重定向到 <code>https://example.com/qux.html</code>。</p><p>而当你不设置上方 <code>hostname</code> 时，插件会将 <code>/foo.html</code> 重定向到 <code>/bar.html</code>，<code>/baz.html</code> 重定向到 <code>https://example.com/qux.html</code>。</p></div><p><code>config</code> 选项也接收一个参数为 <code>App</code> 的函数，该函数的返回值将会被解析为一个重定向映射。这意味着你可以通过传入函数来完全自定义重定向。</p><div class="hint-container tip"><p class="hint-container-title">例子</p><p>假设我们已经在 <code>post</code> 文件夹下有一些文章，而在一次更新中，我们将 <code>post</code> 重命名为 <code>posts</code>，那么我们可以这样定义一个重定向映射:</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token function">redirect</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">hostname</span><span class="token operator">:</span> <span class="token string">&quot;https://example.com&quot;</span><span class="token punctuation">,</span>
  <span class="token function-variable function">config</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">app</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
    Object<span class="token punctuation">.</span><span class="token function">fromEntries</span><span class="token punctuation">(</span>
      app<span class="token punctuation">.</span>pages
        <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> path <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> path<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&quot;/posts/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> path <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>path<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\/posts\\/</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&quot;/post/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> path<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div></div><h2 id="重定向站点" tabindex="-1"><a class="header-anchor" href="#重定向站点" aria-hidden="true">#</a> 重定向站点</h2><p>有时你可能会更改 <code>base</code> 或为你的站点使用新域名，因此你可能希望原始站点自动重定向到新站点。</p><p>为了解决这个问题，插件提供了 <code>vp-redirect</code> 脚手架。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>使用:
  $ vp-redirect generate <span class="token punctuation">[</span>源文件夹<span class="token punctuation">]</span>

Options:
  <span class="token parameter variable">--hostname</span> <span class="token operator">&lt;</span>hostname<span class="token operator">&gt;</span>  重定向到的域名 <span class="token punctuation">(</span>例如: https://new.example.com/<span class="token punctuation">)</span> <span class="token punctuation">(</span>默认: /<span class="token punctuation">)</span>
  -c, <span class="token parameter variable">--config</span> <span class="token operator">&lt;</span>config<span class="token operator">&gt;</span>  设置配置文件路径
  -o, <span class="token parameter variable">--output</span> <span class="token operator">&lt;</span>output<span class="token operator">&gt;</span>  设置输出目录 <span class="token punctuation">(</span>默认: .vuepress/redirect<span class="token punctuation">)</span>
  <span class="token parameter variable">--cache</span> <span class="token operator">&lt;</span>cache<span class="token operator">&gt;</span>        设置缓存文件的目录
  -t, <span class="token parameter variable">--temp</span> <span class="token operator">&lt;</span>temp<span class="token operator">&gt;</span>      设置临时文件的目录
  --clean-cache          生成前清理缓存文件
  --clean-temp           生成前清理临时文件
  -h, <span class="token parameter variable">--help</span>             显示此消息
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>你需要传入 VuePress 项目源目录并设置 <code>hostname</code> 选项。重定向助手脚手架将初始化你的 VuePress 项目以获取页面，然后在输出目录生成重定向 html 文件。</p><p>默认情况下，插件将输出到源文件夹下的 .vuepress/redirect 目录。你应该将其上传到你的原始站点以提供重定向。</p>`,17),o=[e];function c(l,i){return a(),s("div",null,o)}const u=n(p,[["render",c],["__file","guide.html.vue"]]);export{u as default};
