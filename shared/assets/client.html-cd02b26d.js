import{_ as n,W as s,X as a,a1 as t}from"./framework-eb069dea.js";const e={},o=t(`<h2 id="composables" tabindex="-1"><a class="header-anchor" href="#composables" aria-hidden="true">#</a> Composables</h2><div class="hint-container note"><p class="hint-container-title">Note</p><p>These function can only be called inside setup.</p></div><h3 id="hasglobalcomponent" tabindex="-1"><a class="header-anchor" href="#hasglobalcomponent" aria-hidden="true">#</a> hasGlobalComponent</h3><p>Check whether a component is registered globally.</p><div class="hint-container note"><p class="hint-container-title">Note</p><p>Local import of this component does not affect the result.</p></div><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">hasGlobalComponent</span><span class="token operator">:</span> <span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
</code></pre></div><details class="hint-container details"><summary>Example</summary><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// if you globally register \`&lt;my-component&gt;\`</span>
<span class="token function">hasGlobalComponent</span><span class="token punctuation">(</span><span class="token string">&quot;MyComponent&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
<span class="token function">hasGlobalComponent</span><span class="token punctuation">(</span><span class="token string">&quot;my-component&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>

<span class="token function">hasGlobalComponent</span><span class="token punctuation">(</span><span class="token string">&quot;MyComponent2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
</code></pre></div></details><h3 id="uselocaleconfig" tabindex="-1"><a class="header-anchor" href="#uselocaleconfig" aria-hidden="true">#</a> useLocaleConfig</h3><p>Get current locale config from locales settings.</p><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> useLocaleConfig<span class="token operator">:</span> <span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name">LocaleData</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>
  localesConfig<span class="token operator">:</span> RequiredLocaleConfig<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span>
<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> ComputedRef<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre></div><details class="hint-container details"><summary>Example</summary><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> localesCOnfig <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token string-property property">&quot;/&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Title&quot;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;/zh/&quot;</span><span class="token operator">:</span> <span class="token string">&quot;标题&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> locale <span class="token operator">=</span> <span class="token function">useLocaleConfig</span><span class="token punctuation">(</span>localesConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// under \`/page\`</span>
locale<span class="token punctuation">.</span>value<span class="token punctuation">;</span> <span class="token comment">// &#39;Title&#39;</span>

<span class="token comment">// under \`/zh/page\`</span>
locale<span class="token punctuation">.</span>value<span class="token punctuation">;</span> <span class="token comment">// &#39;标题&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="usepagetitle" tabindex="-1"><a class="header-anchor" href="#usepagetitle" aria-hidden="true">#</a> usePageTitle</h3><p>Get title of current page.</p><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name">PageTitleRef</span> <span class="token operator">=</span> ComputedRef<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">usePageTitle</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> PageTitleRef<span class="token punctuation">;</span>
</code></pre></div><h2 id="utils" tabindex="-1"><a class="header-anchor" href="#utils" aria-hidden="true">#</a> Utils</h2><h3 id="device-related" tabindex="-1"><a class="header-anchor" href="#device-related" aria-hidden="true">#</a> Device Related</h3><p>Features can be easily inferred by function names.</p><p>The ua parameter is <code>navigator.userAgent</code>, as it&#39;s not available in SSR, so you are expected to call these functions in <code>onMounted</code> lifecycle.</p><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">checkIsMobile</span><span class="token operator">:</span> <span class="token punctuation">(</span>ua<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">checkIsChromeWebView</span><span class="token operator">:</span> <span class="token punctuation">(</span>ua<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">checkIsSafariMobile</span><span class="token operator">:</span> <span class="token punctuation">(</span>ua<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">checkIsSafari</span><span class="token operator">:</span> <span class="token punctuation">(</span>ua<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">checkIsiPhone</span><span class="token operator">:</span> <span class="token punctuation">(</span>ua<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">checkIsiPad</span><span class="token operator">:</span> <span class="token punctuation">(</span>ua<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">checkIsWindows</span><span class="token operator">:</span> <span class="token punctuation">(</span>ua<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">checkIsIOS</span><span class="token operator">:</span> <span class="token punctuation">(</span>ua<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">checkIsMacOS</span><span class="token operator">:</span> <span class="token punctuation">(</span>ua<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="router-related" tabindex="-1"><a class="header-anchor" href="#router-related" aria-hidden="true">#</a> Router Related</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * Whether the lick is active
 *
 * <span class="token keyword">@param</span> <span class="token parameter">route</span> Current route
 * <span class="token keyword">@param</span> <span class="token parameter">link</span> link path
 * <span class="token keyword">@returns</span> Whether the lick is active
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isActiveLink</span><span class="token operator">:</span> <span class="token punctuation">(</span>
  route<span class="token operator">:</span> RouteLocationNormalizedLoaded<span class="token punctuation">,</span>
  link<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,21),p=[o];function c(l,i){return s(),a("div",null,p)}const u=n(e,[["render",c],["__file","client.html.vue"]]);export{u as default};
